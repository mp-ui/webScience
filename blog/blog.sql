/*
 Navicat Premium Data Transfer

 Source Server         : 本机
 Source Server Type    : MySQL
 Source Server Version : 50734
 Source Host           : localhost:3306
 Source Schema         : blog

 Target Server Type    : MySQL
 Target Server Version : 50734
 File Encoding         : 65001

 Date: 02/06/2021 13:10:27
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `description` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
  `uid` int(11) NOT NULL,
  `pageView` int(11) NOT NULL DEFAULT 0,
  `ctime` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `u`(`uid`) USING BTREE,
  CONSTRAINT `u` FOREIGN KEY (`uid`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 35 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (1, 'Hello World!!!', NULL, 'Hello!', 1, 13, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (2, '滔爷牛逼', NULL, '滔滔牛逼！！！', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (3, '未来电子商务的发展前景趋势大揭秘', NULL, '<p>电子商务未来五年的发展趋势是怎样的呢?1号店董事长于刚以他的切身经验和感受给我们做出了解答。他认为电子商务未来有十大趋势，关键词分别是：移动化，平台化，三四五线城市，物联网，社交购物，O2O，云服务，大数据，精准化营销和个性化服务以及互联网金融。</p><p>1号店董事长于刚最近在某会议上讲到了未来5年的电子商务趋势，他认为中国的电子商务在未来的五年，还会以每年百分之二十几的速度增长，并且有十大趋势。以下，是他讲话的主要观点。</p><p>电子商务最近一年面临巨大拐点：1.以马云主导的淘宝系，以及京东、1号店等，这些以产品为主要形式的实物型电商;2.以马化腾为主导的腾讯系，以及美团等，这些以服务为主要形式的服务型电商。</p><p><strong>第一个趋势，移动购物。</strong>大家知道去年年底时候，手机用户已经达到了五亿，而PC用户是5.9亿，而手机的渗透率增速是远大于PC的渗透率的。也就是说在2017年，手机用户将超过PC用户，也就是说电子商务将来的主战场不是在PC，而是在移动设备上。而移动用户有很多的特点，首先购买的频次更高、更零碎，购买的高峰不是在白天，是在晚上和周末、节假日。而移动购物将会革PC电子商务的命，我们要做好准备，我们要迎接这场新的革命。而做好移动购物，不能简简单单的把PC电子商务搬到移动上面，而要充分的利用这种移动设备的特征，比如说它的扫描特征、图象、语音识别特征、感应特征、地理化、GPS的特征，这些功能可以真正的把移动带到千家万户。</p><p><strong>第二个趋势，平台化。</strong>大家可以看到大的电商都开始有自己的平台，其实这个道理很清楚，就是因为这是最充分利用自己的流量、自己的商品和服务最大效益化的一个过程，因为有平台，可以利用全社会的资源弥补自己商品的丰富度，增加自己商品的丰富度，增加自己的服务和地理覆盖。</p><p><strong>第三个趋势，电子商务将向三四五线城市渗透。</strong>一方面来源于移动设备继续的渗透，很多三四五线城市接触互联网是靠手机、Pad来上网的，而且这些城市首先经济收入提高，再加上本地的购物不便，加上商品可获得性很差，加上零售比先进国家落后。</p><p>随着一二线城市网购渗透率接近饱和，电商城镇化布局将成为电商企业们发展的重点，三四线城市、乡镇等地区将成为电商&ldquo;渠道下沉&rdquo;的主战场，同时电商在三四线欠发达地区可以更大的发挥其优势，缩小三四线城市、乡镇与一二线城市的消费差别。阿里在发展菜鸟物流，不断辐射三四线城市;京东IPO申请的融资金额大约为15亿美元到19亿美元之间，但是京东在招股书中表示，将要有10到12亿美元用于电商基础设施的建设，似乎两大巨头都将重点放在了三四线城市。事实上，谁先抢占了三四线城市，谁将在未来的竞争中占据更大的优势。</p><p><strong>第四个趋势，我认为是物联网。</strong>大家可以试想一下这些可穿戴设备和RFID的发展，将来的芯片可以植入在皮肤里面，可以植入在衣服里面，可以在任何的物品里面，任何物品状态的变化可以引起其他相关物品的状态变化。你可以想象，如果你放一个牛奶放进你的冰箱，进冰箱的时候自动扫描，自动的知道这个保质期，知道什么时候放进去，知道你的用量，当你要完的时候，马上可以自动下订单，这个订单作为商家接到订单马上给你送货，刚好下订单可能又会触发电子商务，从供应商那里下订单，而那个订单触发生产，也就是说所有的零售、物流和最后的生产可以全部结合起来。</p><p><strong>第五个趋势，我认为是社交购物。</strong>希望听到亲人、朋友、意见领袖的意见，作为参考，我们推荐。社交购物可以让大家在社交网络上面更加精准的去为顾客营销，更个性化的为顾客服务。</p><p><strong>第六个趋势，O2O。</strong>很有意思，昨天沃尔马全球CEO来上海，他去中远两湾城参观，那里建了一个社区的服务点，那有三个功能，第一是集货的区域，由那个地方集散到顾客手中;第二那个地方是顾客取货的点;第三个那个地方是营销的点，展示我们的商品，为社区的居民进行团购，帮助他们上网，帮助他们使用手机购物，起了三个作用。但很感叹的是什么呢?传统零售在往线上走，电子商务往线下走，最后一定是O2O的融合，为顾客提供多渠道、更大的便利。</p><p><strong>第七个趋势，云服务和电子商务解决方案。</strong>大量的电子商务的企业发展了很多的能力，这些能力包括物流的能力、营销的能力、系统的能力、各种各样为商家为供应商为合作伙伴提供电子商务解决方案的能力，这些能力希望最大效率的发挥作用。比如说我们推出一个SBY，这里面有营销服务、数据服务、平台服务、物流服务。刚刚又推出了金融服务，还会有更多的服务。也就是说我们把自己研发出来的，为电子商务本身提供的能力，提供给全社会。</p><p><strong>第八个趋势，大数据的应用。</strong>大家知道实际上从电子商务的盈利模式逐渐作为一个升级。低级的，盈利是靠商品的差价。下一个能力是为供应商商品做营销，而做到返点，营销所带来的盈利。下一个盈利方面是靠平台，有了流量、顾客，希望收取平台使用费和佣金提高自己的盈利能力。下一个能力是金融能力，也就是说为我们的供应商、商家提供各种各样的金融服务，得到的能力。下一个能力是数据，也就是我们有大量电子商务顾客行为数据，利用这个数据充分产生它的价值，这个能力也是为电子商务盈利的最高层次。而数据，我们知道也是一个逐渐升级的过程，原始的数据是零散的，价值非常小，而这些数据经过过滤、分析而成为了信息，而在信息的基础之上建立模型，来支持决策，成了我们的知识，而这些知识能够做预测，能够举一反三，能够悟出道理，成了我们的智慧。所以在整个升级，数据升级，和我们数据价值的升级，我们从中就充分的体现这个大数据的价值。</p><p>&nbsp;</p>', 1, 2, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (4, 'Android 12 重磅亮相！阔别 2 年的 Google I/O 开发者大会回来了', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <blockquote> \r\n <p>整理 | 郑丽媛<br> 出品 | CSDN（ID：CSDNnews）</p> \r\n</blockquote> \r\n<p>去年，因为一场席卷全球、突如其来的特殊情况，出于安全考虑，谷歌首次取消了一年一度的 Google I/O 开发者大会，令许多对此翘首以待的开发者感到遗憾。</p> \r\n<p>所幸，今年 Google I/O 开发者大会于北京时间 5 月 19 日凌晨 1 点以线上直播形式重新回归。</p> \r\n<p>阔别两年，不仅是开发者满怀期待，谷歌也可谓是“厚积薄发”：三个多小时的直播（Google I/O 大会主题演讲+开发者主题演讲）干货满满， Android 12 重磅登场，各种创新技术轮番轰炸，令人目不暇接。</p> \r\n<p>那么在这场积蓄了 2 年的 Google I/O 开发者大会上，谷歌具体发布了哪些创新突破？Android 12 又拥有哪些亮点？等不及了，先让我们一起看看本次开发者大会的精彩内容吧！</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210519085635758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<center>\r\n （图片来自谷歌官方）\r\n</center> \r\n<h2><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"_Google_18\"></a>为所有人构建更有用的 Google</h2> \r\n<p>在大会正式开始之前，今年的暖场活动与往年完全不同——不是简单地播放音乐和广告，而是“由 Tune-Yards 和 Blob Opera 组成的机器学习音乐实验”。（Blob Opera：谷歌推出的一个非营利性艺术文化项目，利用机器学习技术，用户可用来创作融合歌剧元素的歌曲。）</p> \r\n<p>对于这个热场阶段的小创新，外媒 The Verge 评价道：“看起来人类正在与人工智能进行交流，他们正以某种方式相互作用。这不仅很可爱，还也很有噱头。”</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210519085708817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<p>暖场结束后，谷歌 CEO Sundar Pichai 以一句“为所有人构建更有用的 Google”为开场，正式开启了 Google I/O 2021 开发者大会。</p> \r\n<p>以这句话为主题，谷歌宣布了一系列改善和便捷人们生活体验的技术创新：</p> \r\n<p><strong>Smart Canvas（智能画布）</strong><br> 谷歌在 Google Workspace 中推出了一项新协作工具——Smart Canvas，可以更高效地将文档、表格和幻灯片进行组合，提供更无缝的体验。</p> \r\n<p>另外，谷歌优化了 Google Meet 的噪音消除，还将使用 AI 自动缩放以实现最佳人脸显示并提供自定义视图，并在远程办公的大环境下，宣布今年晚些时候将把 Google Meet 直接整合到 Google Docs、Sheet 和 Slides 中，以便用户在这些应用中工作协作时可以直接进行 Meet 视频通话。</p> \r\n<p><strong>LaMDA</strong></p> \r\n<p>如今人们对于翻译的需求越来越大，仅上个月，谷歌 Chrome 浏览器就翻译了近 200 亿个网页。这也驱使谷歌对翻译方面进入更深的探究，通过 AI 使其对语境和语言的理解更为准确，并且 Google Assistant 也有了解说模式，逐步向“万能翻译器”迈进。</p> \r\n<p>基于此，谷歌还发布了自然语言平台——LaMDA。Sundar Pichai 表示：“我们已经彻底改变了计算机理解自然语言的能力”。据介绍，新 LaMDA AI 平台可以实现更加智能的问答体验，根据上下文内容提供建议和答案，更能让自然语言对话不违和地进行下去。</p> \r\n<p>大会上展示了用户与 LaMDA 充当的冥王星和纸飞机的对话，可以看出对话自然合理，并不像普通聊天机器人那般毫无逻辑且跳脱。</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210519085732747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<p>不过，Sundar Pichai 补充道：“由于现在（LaMDA）还处于早期研究阶段，所以不可能一切都正确。” 未来谷歌将把 LaMDA 应用进 Google 助手、搜索等产品中。</p> \r\n<p><strong>TPU V4</strong></p> \r\n<p>谷歌推出新一代 TPU V4 Pod，即 TPU 芯片的第四代产品。据介绍，每套装置中都拥有 4096 个 TPU V4 芯片，一个 Pod 就可以提供超过一个 Exoflops（浮点算力为 10^18）的 AI 计算能力。</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210519085810500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<p><strong>量子计算</strong></p> \r\n<p>大会中，谷歌还展示其新的量子人工智能园区，表明它正在研究量子计算机、量子位和处理器。谷歌表示希望到 2029 年能拥有一台真正的量子计算机，可用于大规模业务计算。</p> \r\n<p><strong>Little Patterns</strong></p> \r\n<p>关于谷歌相册中越来越海量的照片，谷歌也为用户带来了一项名为 Little Patterns 的新 AI 功能。该功能将使你的照片库中包含三个相似对象的照片归类于一个分组，以便用户查看。还将创建电影般的照片，使两张类似的照片通过 AI 创建动画图像。</p> \r\n<p>此外，谷歌还透露正在开发一种新工具，可以从照片库中轻松删除某个人的全部照片，例如，你想忘记却频繁出现在相册中的前任。</p> \r\n<p><strong>新的密码工具</strong></p> \r\n<p>谷歌正在为其 Chrome 密码管理器增加一项功能，即允许用户仅通过点击几个按钮即可改变被泄露的密码。这项功能首先将在 Android 上的 Chrome 中推出。</p> \r\n<p>除了以上这些新功能及平台，谷歌还更新了谷歌地图的部分功能；提供集成整个网络信息的“购物图”便捷用户购物过程；Google AR 使用户可以观看专业运动员在 AR 中的动作；新的隐私控制功能可用于更多应用程序等一系列皆是为了提高用户体验而做出的变化。</p> \r\n<p>在这部分之后，Android 12 终于重磅登场。</p> \r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Android_12__76\"></a>Android 12 重磅登场</h2> \r\n<p>一直致力于个性化的 Android 通过开放的生态系统，如今在全球范围内已发展到超过 30 亿台活动的 Android 设备。</p> \r\n<p>因此谷歌表示，Android 12 将“建立在你喜欢 Android 所有内容的基础上”，从而专注于构建一款适应用户自身，并且开发安全、设计私密的操作系统，还能使用户的所有设备协同工作。</p> \r\n<p>所以，今天谷歌将正式发布 Android 12 的第一个 Bata 版本，除了谷歌自家的 Pixel 手机，一加、小米、OPPO 等手机也可下载这个最新版本。</p> \r\n<p><strong>更个性化的体验</strong></p> \r\n<p>据谷歌官方介绍，Android 12 包含了 Android 历史上最大的设计变更，从颜色到形状、光线到动画都进行了调整，因此更具有动态感和个性化。</p> \r\n<p>个性化：在 Android 12 中，用户能够使用自定义调色板和重新设计的小部件制定完全个性化的手机，主调颜色的选取将应用于整个操作系统，包括通知栏、锁定屏幕、音量控件、新设计的小部件等。<br> <img src=\"https://img-blog.csdnimg.cn/20210519085853326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"图片\"></p> \r\n<p>据介绍，这种设置需要谷歌的软件和硬件团队共同完成，也因此开发出了名为 Material You 的设计语言统一软硬件生态系统。</p> \r\n<p>流畅的动线及动画：Android 12 的滑动及滚动动画更为顺滑。谷歌还简化了交互过程，重新设计整个基础系统，包括将核心系统服务所需的 CPU 时间减少 22％ 等，以使 Android 设备响应速度更快、电源效率更高。</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210519085909309.png#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<p>重新设计的系统空间：手机上例如通知栏、快速设置以及电源按钮等重要部分进行了重新设计。</p> \r\n<p><strong>更可控的隐私安全</strong></p> \r\n<p>Android 12 对于隐私安全进行了大程度优化，用户可以清晰了解到哪些应用正在访问数据，以及可以控制应用访问私人信息的程度。</p> \r\n<p>在“隐私”的选项中会提供一个单一视图，以便用户查看权限设置以及应用是否在访问数据和访问频率，也可以直接在图中取消相关权限。</p> \r\n<p>在状态栏的右上角添加了一个新指示器，以便提示用户应用何时在访问麦克风或摄像头。</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210519090140727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<p>此外，Android 12 中还新增了更细化的位置权限，即可以设置应用只能获取用户的大致位置而非精确定位。</p> \r\n<p>谷歌还表示，以上功能并非 Android 12 的全貌，今年还将继续进行开发，以确保用户体验与隐私安全得到更充分的保障。</p> \r\n<p>此外，Android 12 的多设备连接和协同方面也进行了更新。谷歌宣布 Android TV 和 Google TV 的遥控器都可以内置到 Android 手机中。而且 Android Auto 目前已应用在 1 亿辆汽车上，因而数字汽车钥匙也得到了发展，多家汽车品牌都参与支持 NFC 和超宽带方案，其中福特和本田等品牌都将支持无线技术，其数字汽车钥匙也将支持 Android 12。</p> \r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_120\"></a>更多亮点</h2> \r\n<p>在发布完 Android 12 之后，大会还宣布了一件事：Wear OS（谷歌用于可穿戴设备的操作系统）和基于 Tizen（三星穿戴设备的操作系统）的软件平台正在合并，并重新启动 Android 手表。</p> \r\n<p>三星高管在大会上也回应道:“我们将把 Galaxy Watch 的最佳功能跟谷歌整合到一个平台上。”他还承诺下一代 Galaxy Watch 将运行在这个统一平台上，未来 Fitbit 设备也将基于该系统。</p> \r\n<p>除此之外，谷歌还关注人们的健康问题，不仅宣布将于今年晚些时候发布一款通过手机摄像头利用 AI 帮助人们识别常见皮肤状况的工具，还分享了新的 AI 研究，旨在改善结核病的筛查。</p> \r\n<p>那么针对这场谷歌攒了 2 年的 I/O 开发者大会，有哪些是你一直期待的呢？欢迎大家与我们分享讨论。</p>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://csdnnews.blog.csdn.net/article/details/117014911&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 2, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (5, '\"Internet plus healthcare\" exhibition showcases latest technological developments', NULL, '<p><img src=\"http://www.globaltimes.cn/Portals/0/attachment/2019/2019-09-07/d0ecec52-6c5c-4d06-a4c3-f51cc06b93a2.jpeg\" style=\"border-bottom-width:0px; border-left-width:0px; border-right-width:0px; border-top-width:0px\" /></p><p>A visitor has her blood pressure measured by a smart sphygmomanometer during an &quot;Internet plus healthcare&quot; exhibition of the ongoing fourth <a href=\"http://www.globaltimes.cn/content/1065050.shtml\" target=\"_blank\">China-Arab States Expo</a> in Yinchuan, northwest China&#39;s Ningxia Hui Autonomous Region, Sept. 6, 2019. Held as part of the fourth China-Arab States Expo, the event showcases the latest technological developments by Chinese and international exhibitors in the smart healthcare industry. Photo: Xinhua</p><p>&nbsp;</p><p><br />&nbsp;</p><p>&nbsp;</p><p><img src=\"http://www.globaltimes.cn/Portals/0/attachment/2019/2019-09-07/1bd62957-495c-483c-9a16-77ec0c148eb6.jpeg\" style=\"border-bottom-width:0px; border-left-width:0px; border-right-width:0px; border-top-width:0px\" /></p><p>Visitors learn about a medical care system based on 5G and cloud technologies during an &quot;Internet plus healthcare&quot; exhibition of the ongoing fourth China-Arab States Expo in Yinchuan, northwest China&#39;s Ningxia Hui Autonomous Region, Sept. 6, 2019. Held as part of the fourth China-Arab States Expo, the event showcases the latest technological developments by Chinese and international exhibitors in the smart healthcare industry. Photo: Xinhua</p><p>&nbsp;</p><p><br />&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><img src=\"http://www.globaltimes.cn/Portals/0/attachment/2019/2019-09-07/0b8fe737-0df1-425a-96e8-11546f5259f1.jpeg\" style=\"border-bottom-width:0px; border-left-width:0px; border-right-width:0px; border-top-width:0px\" /></p><p>Visitors get information on smart medical equipment during an &quot;Internet plus healthcare&quot; exhibition of the ongoing fourth China-Arab States Expo in Yinchuan, northwest China&#39;s Ningxia Hui Autonomous Region, Sept. 6, 2019. Held as part of the fourth China-Arab States Expo, the event showcases the latest technological developments by Chinese and international exhibitors in the smart healthcare industry. Photo: Xinhua</p><p>&nbsp;</p><p><br />&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><img src=\"http://www.globaltimes.cn/Portals/0/attachment/2019/2019-09-07/4701b1cd-c810-488c-9268-307ca3dfbccc.jpeg\" style=\"border-bottom-width:0px; border-left-width:0px; border-right-width:0px; border-top-width:0px\" /></p><p>People visit an &quot;Internet plus healthcare&quot; exhibition of the ongoing fourth China-Arab States Expo in Yinchuan, northwest China&#39;s Ningxia Hui Autonomous Region, Sept. 6, 2019. Held as part of the fourth China-Arab States Expo, the event showcases the latest technological developments by Chinese and international exhibitors in the smart healthcare industry. Photo: Xinhua</p><p>&nbsp;</p><p><br />&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><img src=\"http://www.globaltimes.cn/Portals/0/attachment/2019/2019-09-07/aabac31a-3f19-4dd8-b262-e9ddef2e2784.jpeg\" style=\"border-bottom-width:0px; border-left-width:0px; border-right-width:0px; border-top-width:0px\" /></p><p>An exhibitor demonstrates a magnetically controlled capsule gastroscopy system during an &quot;Internet plus healthcare&quot; exhibition of the ongoing fourth China-Arab States Expo in Yinchuan, northwest China&#39;s Ningxia Hui Autonomous Region, Sept. 6, 2019. Held as part of the fourth China-Arab States Expo, the event showcases the latest technological developments by Chinese and international exhibitors in the smart healthcare industry. Photo: Xinhua</p><p>&nbsp;</p><p><br />&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><img src=\"http://www.globaltimes.cn/Portals/0/attachment/2019/2019-09-07/5980144f-0aae-47d4-9a7a-c45d12a3b291.jpeg\" style=\"border-bottom-width:0px; border-left-width:0px; border-right-width:0px; border-top-width:0px\" /></p><p>Photo taken on Sept. 6, 2019 shows a color Doppler ultrasound machine on display during an &quot;Internet plus healthcare&quot; exhibition of the ongoing fourth China-Arab States Expo in Yinchuan, northwest China&#39;s Ningxia Hui Autonomous Region. Held as part of the fourth China-Arab States Expo, the event showcases the latest technological developments by Chinese and international exhibitors in the smart healthcare industry. Photo: Xinhua</p><p>&nbsp;</p><p><br />&nbsp;<br />&nbsp;</p><p>&nbsp;</p>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (6, '张一鸣退一步，换字节跳动的“海阔天空”', NULL, '<div class=\"blog-content-box\">\r\n    <div class=\"article-header-box\">\r\n        <div class=\"article-header\">\r\n            <div class=\"article-title-box\">\r\n                <h1 class=\"title-article\" id=\"articleContentId\">张一鸣退一步，换字节跳动的“海阔天空”</h1>\r\n            </div>\r\n            <div class=\"article-info-box\">\r\n                <div class=\"article-bar-top\">\r\n                    <img class=\"article-type-img\" src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/original.png\" alt=\"\">\r\n                    <div class=\"bar-content\">\r\n                    <a class=\"follow-nickName \" href=\"https://csdnnews.blog.csdn.net\" target=\"_blank\" rel=\"noopener\">CSDN资讯</a>\r\n                    <span class=\"time\">2021-05-20 18:16:44</span>\r\n                    <img class=\"article-read-img article-heard-img\" src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes.png\" alt=\"\">\r\n                    <span class=\"read-count\">6445</span>\r\n                    <a id=\"blog_detail_zk_collection\" class=\"un-collection\" data-report-click=\"{&quot;mod&quot;:&quot;popu_823&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4232&quot;,&quot;ab&quot;:&quot;new&quot;}\">\r\n                        <img class=\"article-collect-img article-heard-img un-collect-status isdefault\" style=\"display:inline-block\" src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollect.png\" alt=\"\">\r\n                        <img class=\"article-collect-img article-heard-img collect-status isactive\" style=\"display:none\" src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive.png\" alt=\"\">\r\n                        <span class=\"name\">收藏</span>\r\n                        <span class=\"get-collection\">\r\n                            15\r\n                        </span>\r\n                    </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"blog-tags-box\">\r\n                    <div class=\"tags-box artic-tag-box\">\r\n                            <span class=\"label\">分类专栏：</span>\r\n                                <a class=\"tag-link\" href=\"https://blog.csdn.net/csdnnews/category_10004965.html\" target=\"_blank\" rel=\"noopener\">资讯</a>\r\n                            <span class=\"label\">文章标签：</span>\r\n                                <a data-report-click=\"{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;人工智能&quot;,&quot;ab&quot;:&quot;new&quot;}\" class=\"tag-link\" href=\"https://www.csdn.net/tags/MtTaEg3sNzIxMjgtYmxvZwO0O0OO0O0O.html\" target=\"_blank\" rel=\"noopener\">人工智能</a>\r\n                                <a data-report-click=\"{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;项目管理&quot;,&quot;ab&quot;:&quot;new&quot;}\" class=\"tag-link\" href=\"https://www.csdn.net/tags/MtTaEg3sMzg5NjktYmxvZwO0O0OO0O0O.html\" target=\"_blank\" rel=\"noopener\">项目管理</a>\r\n                                <a data-report-click=\"{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;大数据&quot;,&quot;ab&quot;:&quot;new&quot;}\" class=\"tag-link\" href=\"https://www.csdn.net/tags/MtTaYg5sNzg2NS1ibG9n.html\" target=\"_blank\" rel=\"noopener\">大数据</a>\r\n                                <a data-report-click=\"{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;区块链&quot;,&quot;ab&quot;:&quot;new&quot;}\" class=\"tag-link\" href=\"https://www.csdn.net/tags/MtTaEg0sNDkyNDQtYmxvZwO0O0OO0O0O.html\" target=\"_blank\" rel=\"noopener\">区块链</a>\r\n                                <a data-report-click=\"{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;物联网&quot;,&quot;ab&quot;:&quot;new&quot;}\" class=\"tag-link\" href=\"https://www.csdn.net/tags/MtzaMgxsNDIzNzctYmxvZwO0O0OO0O0O.html\" target=\"_blank\" rel=\"noopener\">物联网</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"slide-content-box\">\r\n                    <div class=\"article-copyright\">\r\n                        <div class=\"creativecommons\">\r\n                            版权声明：本文为博主原创文章，遵循<a href=\"http://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。\r\n                        </div>\r\n                        <div class=\"article-source-link\">\r\n                            本文链接：<a href=\"https://blog.csdn.net/csdnnews/article/details/117094583\" target=\"_blank\">https://blog.csdn.net/csdnnews/article/details/117094583</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"operating\">\r\n                    <a class=\"href-article-edit slide-toggle\">版权</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"csdn-shop-window-top\" class=\"csdn-shop-window-common\" style=\"margin-top: 18px; padding: 0px; display: none;\"></div>\r\n    <article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"htmledit_views\">\r\n                    <div id=\"js_content\"> \r\n <p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/03d2988d1d22f7d5fb4d5e6cb15c2d78.gif\"></p> \r\n <p>作者 | Carol&nbsp; &nbsp;&nbsp;</p> \r\n <p>出品 | CSDN（ID：CSDNnews）</p> \r\n <p>5月20日，字节跳动创始人张一鸣发布内部全员信，宣布卸任字节跳动CEO一职。由字节跳动联合创始人梁汝波接棒成为新任CEO。</p> \r\n <p>在全员信中，张一鸣谈及自己的卸任的原因并不是要离开字节跳动，而是为了寻求公司未来发展方向而做出的慎重选择。张一鸣同时表示，他和梁汝波将于2021年底前完成字节跳动CEO职责的过渡交接，他对这个曾一起两度创业的伙伴的工作能力很有信心。</p> \r\n <p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/86b7b4a8206a815bc91a331df3735928.png\"></p> \r\n <p>张一鸣（左） 梁汝波（右）</p> \r\n <p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/aa2f1b15544eef3f739192d4997624ff.png\"></p> \r\n <h1><a name=\"t0\"></a><a name=\"t0\"></a>&nbsp;</h1> \r\n <p><strong>卸任CEO，是为了更好地前进</strong></p> \r\n <p>&nbsp;</p> \r\n <p>在全员信中，张一鸣真诚地谈及了卸任原因。他表示，他对字节跳动现有的目标战略并不满意，为了有时间思考更长期的OKR（目标与关键成果），他决定卸任CEO的角色，放下日常的管理工作，作为公司创始人，聚焦到远景战略、企业文化、社会责任等长期重要的事情上去。</p> \r\n <p>在张一鸣看来，创业以来，字节跳动的成功是有幸抓住了时代发展的机遇，基于机器学习技术在移动端和视频上进行创新与实践，取得了一些成绩。虽然公司业务发展良好，但作为一个互联网大厂，在日新月异的信息时代背景下，企业必须要有持续的重大创新和突破，才能保持旺盛的生命力。</p> \r\n <p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/3e121a4713dd1540b9903edbc4d750c5.png\"></p> \r\n <p>这一切，需要他这只字节跳动的领头羊不断进行学习和提升，而张一鸣也意识到，沉重的工作让他失去了学习的时间。对于机器学习方面的很多新突破和技术，他没有及时关注，“我感觉过去几年很大程度都在“吃老本”，比如，在17年之前我还能保持关注机器学习技术的新进展，近三年已经没有太多学习了。”</p> \r\n <p>在这些问题真正影响到字节跳动的发展之前，张一鸣先给自己来了一波“断舍离”。</p> \r\n <p>之前，张一鸣也曾在与创业者的分享中说到：CEO要避免一个普遍的负规模效应。因为当企业的业务和组织变复杂规模变大的时候，作为中心节点的CEO容易陷入被动：每天要听很多汇报总结，做很多审批和决策，容易导致内部视角，知识结构更新缓慢。</p> \r\n <p>经过近半年的深思熟虑，张一鸣终于做出了他的决定，退一步，或许就是字节跳动未来的海阔天空。</p> \r\n <p>成立于2012年3月的字节跳动是互联网行业里的后起之秀，也是最早将人工智能应用于移动互联网场景的科技企业之一。</p> \r\n <p>2017 年，由张一鸣创建的今日头条的日活用户就达到了1.2亿；在2020年春节前后，今日头条App实现DAU过亿的成绩，一度成为字节跳动第二大收入来源，贡献了20%的广告收入，达到360亿元。</p> \r\n <p>有多少成绩，就有多少波折。成立九年来，字节跳动面临过重重考验，而在张一鸣带领着字节跳动过五关斩六将之时，在外人看不见的地方与之共进退的，就是梁汝波。</p> \r\n <p>&nbsp;</p> \r\n <p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/75be894efcf2eb3fee4f8e4d20cadbc7.png\"></p> \r\n <h1><a name=\"t1\"></a><a name=\"t1\"></a>&nbsp;</h1> \r\n <p><strong>老搭档接手，知人善任</strong></p> \r\n <p>&nbsp;</p> \r\n <p>据公开资料显示，接任字节跳动CEO的梁汝波是张一鸣的大学同学，两人一直是创业路上的好搭档。2009年，梁汝波和张一鸣曾共同创办垂直房产搜索引擎“九九房”；2012年，梁汝波与张一鸣共同创办字节跳动。</p> \r\n <p>之后的时间内，梁汝波一直担任字节跳动产品研发负责人，负责早期多个重要产品和业务，包括今日头条、头条号、广告系统和用户增长系统等。</p> \r\n <p>2016年起，梁汝波负责飞书和效率工程，飞书作为一个企业沟通与协作平台，先应用于字节跳动内部，后对外开放。</p> \r\n <p>2020年起，梁汝波负责集团人力资源和管理等工作，推动了字节跳动的组织建设和人才发展。</p> \r\n <p>对于这位搭档的工作能力，张一鸣非常认可：“公司创立以来，从采购安装服务器，接手我写了一半的系统，重要招聘、企业制度和管理系统建设，很多事情是他协助我做的。”可见，梁汝波其实一直与张一鸣共进退，只不过一个在台前，一个在幕后。</p> \r\n <p>对于张一鸣宣布卸任的内部信，梁汝波也发布内部邮件回复道：“谢谢一鸣和团队的信任，很期待在新角色里和大家继续一起工作。”并表示，在过去这些年很幸运能扎根技术、产品和管理，因为有张一鸣在前面处理很多困难和突发状况，让他能够从做用户产品，到后来打造企业产品，再到负责人力与管理工作，始终专注在技术上。</p> \r\n <p>梁汝波还补充道，如今之所以由他来接替 CEO 的职责，是因为张一鸣有更重要的事情要做，事关公司更长远的发展。而CEO 的工作对他来说是一个巨大的挑战，压力很大，但他有信心通过大家的合作努力让公司不断突破，再上台阶。</p> \r\n <p><strong>最后附上张一鸣内部全员信全文内容：</strong></p> \r\n <p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/feff4d9d8b3505ed79a6ddf56a11b620.png\"></p> \r\n <p>&nbsp;</p> \r\n <p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210521113146184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5uZXdz,size_16,color_FFFFFF,t_70\"></p> \r\n <p>&nbsp;</p> \r\n</div>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://csdnnews.blog.csdn.net/article/details/117094583&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n        </div>\r\n    </article>\r\n</div>', 1, 3, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (7, '再见了，IE 浏览器！', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"htmledit_views\">\r\n                    <div id=\"js_content\"> \r\n <p style=\"text-align: center\"><img src=\"https://img-blog.csdnimg.cn/img_convert/db57a0ba1f333225cfacc9ffe263d572.gif\"></p>\r\n <p style=\"text-align: left\">整理 | 郑丽媛<br></p>\r\n <p style=\"text-align: left\">出品 | CSDN（ID：CSDNnews）<br></p>\r\n <p>昨日，微软在其官方博客宣布：<strong>Internet Explorer 11 桌面应用程序将于 2022 年 6 月 15 日停用</strong>，而 Windows&nbsp;10 上 Internet Explorer 的未来将由  Microsoft Edge 接管。<br></p>\r\n <p style=\"text-align: center\"><img src=\"https://img-blog.csdnimg.cn/img_convert/d09f6ed2b9229c7f1d1a601294f51b95.png\"></p>\r\n <p style=\"text-align: center\">（图片来自微软官方）<br></p>\r\n <p>自此，这个历史长达 25 年、曾是微软经典王牌、如今却备受诟病的 IE 浏览器（Internet Explorer）被微软官宣“退役”，自明年起退出历史舞台。<br></p>\r\n <p style=\"text-align: center\"><img src=\"https://img-blog.csdnimg.cn/img_convert/3b7dfac9e2d19196564e34a256aff588.png\"></p>\r\n <p style=\"text-align: center\"><img src=\"https://img-blog.csdnimg.cn/img_convert/7c1f76c08cdc23e970f7588fd0294528.png\"></p>\r\n <p style=\"text-align: center\"><strong>由辉煌到没落的 IE 浏览器</strong><br></p>\r\n <p>1995 年诞生的 IE 浏览器在这 25 年中曾经是浏览器界的龙头老大。<br></p>\r\n <p>从 90 年代中期到 00 年代中期，IE 浏览器一直是 Windows 的标配，只要你的电脑系统是 Windows，你的浏览器就必定有一个 IE。<br></p>\r\n <p>得益于这种“捆绑”方式，加之其美观简洁的设计、交互性更强的网页等其他浏览器做不到的特点，2002 年和 2003 年 IE 浏览器的市场份额达到了 95% 的巅峰，几乎是垄断水平。<br></p>\r\n <p>可似乎是被这傲人的成绩冲昏了头脑，微软逐渐松懈了对 IE 的管理，没有对其后续优化工作投入足够的资源。然而时代在进步、互联网在飞速发展、就连黑客的技术都一年比一年高超，慢下脚步的 IE 浏览器开始显得格格不入。<br></p>\r\n <p>越来越多的用户投诉 IE 浏览器“又慢又不安全”，以至于在 2006 年，经常崩溃的 IE 6 被评选为“有史以来第八糟糕的科技产品”，甚至在 2011 年“科技史上 50 种最糟糕科技产品”中，IE 6 也赫然出现在第 11 名的位置。<br></p>\r\n <p>本来一款浏览器不好用，卸载不就好了，用户也不至于广为诟病。可问题就在于，以捆绑 Windows 系统带起来的 IE 浏览器极难卸载。所以是了，又难用又不能卸载，用户当然只能骂一骂泄泄气。那几年，IE 浏览器的口碑极差。</p>\r\n <p>与此同时，与 IE 相比更快更安全并且开源的火狐和&nbsp; Chrome 浏览器先后问世，抢占了大量市场份额，即使期间微软后知后觉地于 2009 年推出大幅改进的 IE 8，但失去的市场已经回不来了：2015 年 IE 浏览器市场占有率跌破 20%，仅有 15.71％。</p>\r\n <p style=\"text-align: left\">意识到问题严重性的微软为了挽救口碑和市场份额，于 <strong>2015 年推出了 IE 浏览器的替代品——Microsoft Edge，而它的出现也标志着 IE 浏览器终结的开始</strong>。<br></p>\r\n <p style=\"text-align: center\"><img src=\"https://img-blog.csdnimg.cn/img_convert/af9ca2c29f7bde21b2dc0672d1bed38c.png\"><br><strong>“<strong>后起之秀</strong>”Microsoft Edge 上位<br></strong></p>\r\n <p style=\"text-align: left\">为了扶持 Edge 浏览器“上位”，2016 年微软在宣布停止继续对 Win 8 以及 IE 8/9/10 版本提供技术支持时，给用户的建议是：升级至 IE11 或者替换成 Win10 的 Edge 吧。 </p>\r\n <p style=\"text-align: left\">本以为留下的 IE 11 将是 IE 浏览器“全村的希望”，可这几年微软连 IE 这根最后的独苗也没放过：鼓励用户停止使用 IE；在 Edge 中添加 IE 11 兼容模式；Windows 10 系统捆绑 Chromium Edge 浏览器。<br></p>\r\n <p style=\"text-align: left\">不仅如此，去年 8 月微软宣布 2021 年 8 月 17 日起微软 365 办公软件应用和服务将全面停止对 IE 11 的支持。虽然彼时微软表示这一计划并不影响 IE 11 的正常使用，但在微软官方 IE 和 Edge 生命周期问答文档中，还是揭示了 IE 浏览器走向终结的命运：</p>\r\n <blockquote>\r\n  <p style=\"text-align: left\">问：IE 11 是最后一版 Internet Explorer 吗？<br></p>\r\n  <p style=\"text-align: left\">答：是的，IE 11 是 Internet Explorer 浏览器的最后一个重大版本。</p>\r\n </blockquote>\r\n <p style=\"text-align: left\">因此，昨日微软正式官宣 IE 浏览器的彻底“退役”早就有迹可循，微软只是用这几年让用户逐步转向 Edge 后再公开这一决定罢了。 <br></p>\r\n <p style=\"text-align: left\">不过微软还是给怀旧用户留下了一个可以怀念 IE 浏览器的方法：Edge 浏览器中仍可启用 IE 兼容模式，启用 IE 模式后，所有 IE 功能如开发者工具、ActiveX 控件等，都可以在 Edge 浏览器中调用。</p>\r\n <p style=\"text-align: left\">不论 IE 浏览器曾经带给人们怎样的印象，属于它的时代早已过去并已官宣终结。<br></p>\r\n <p style=\"text-align: left\">那么，你对 IE 浏览器有什么看法吗？欢迎评论区留言分享！<br></p>\r\n <p style=\"text-align: left\">参考链接：<br></p>\r\n <p style=\"text-align: left\">https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/<br></p>\r\n <p style=\"text-align: left\">https://zh.wikipedia.org/wiki/Internet_Explorer#cite_note-11</p>\r\n <p style=\"text-align: center\"><img src=\"https://img-blog.csdnimg.cn/img_convert/36c778a4bce2480038a61c65c00c3883.gif\"><img src=\"https://img-blog.csdnimg.cn/img_convert/3c092dc012638a3a198f19bdb517a350.png\"></p>\r\n <pre class=\"has\" name=\"code\"><code class=\"language-php hljs\"><ol class=\"hljs-ln\" style=\"width:1470px\"><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"1\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"2\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"3\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\"> </div></div></li><li><div class=\"hljs-ln-numbers\"><div class=\"hljs-ln-line hljs-ln-n\" data-line-number=\"4\"></div></div><div class=\"hljs-ln-code\"><div class=\"hljs-ln-line\">☞微信“拍一拍”新增“炸一炸”功能；爱奇艺 CEO：会费涨价是行业必然趋势；微软终止 Windows <span class=\"hljs-number\">10</span>X 开发|极客头条☞为什么 M1 和 Mac 是绝配?☞Android <span class=\"hljs-number\">12</span> 重磅亮相！阔别 <span class=\"hljs-number\">2</span> 年的 Google I/O 开发者大会回来了</div></div></li></ol></code><div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\" onclick=\"hljs.copyCode(event)\"></div></pre> \r\n</div>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://csdnnews.blog.csdn.net/article/details/117094702&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n        </div>\r\n    </article>', 1, 1, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (8, '编写一个计算机程序用来计算一百个文件的 16 位效验和(Java实现)', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <h1><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"_16_Java_0\"></a><strong>编写一个计算机程序用来计算一个文件的</strong> 16 <strong>位效验和(Java实现)</strong></h1> \r\n<h3><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_2\"></a>题目</h3> \r\n<p><strong>编写一个计算机程序用来计算一个文件的</strong> 16 <strong>位效验和。最快速的方法是用一个</strong> 32 <strong>位的整数来存放这个和。记住要处理进位（例如，超过</strong> 16 <strong>位的那些位），把它们加到效验和中。</strong></p> \r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_6\"></a>原理</h3> \r\n<p>把要发送的数据看成 16 比特的二进制整数序列，并计算他们的和。若数据字节长度为奇数，则在数据尾部补一个字节的 0 以凑成偶数。</p> \r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"_10\"></a>示例</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/8219976e6db09038b8d5ecf09d6830a8.png\" alt=\"image-20210527232835835\"></p> \r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"_14\"></a>程序设计思路</h3> \r\n<p>1.使用BufferedReader读入文件，每次读一行，每次都会得到一个String类型变量；</p> \r\n<p>2.将该String类型变量转化为char型数组，便于后面拼接计算；</p> \r\n<p>3.数组中，每两个char使用StringBuilder来拼接成一个字符串（因为是每32位进行校验和计算），若数组长度为奇数则单独成一个数；这里是先让char数组元素转化为十进制再转化为十六进制字符串，保证了数据的准确；例：Integer.toHexString(chars[i++] &amp; 0xFFFF)</p> \r\n<p>4.每次一个字符串拼接成了16进制表示32位的字符串后，要加入list，方便后面计算；</p> \r\n<p>5.计算环节：</p> \r\n<p>a.累加求和，先不考虑校验和多余16位的问题;</p> \r\n<p>b.将总和转化位字符串，如果长度大于4位就说明超过16位，再进行处理;</p> \r\n<p>c.将后4位和其余部分的字符串都转化为十进制然后相加，再转化为十六进制，检查新字符串长度是否还大于4;d.如果还大于4，重复上述过程，直到字符串长度最终位4.</p> \r\n<blockquote> \r\n <p>总体思路是转化位十进制计算后再转化为十六进制，整个过程主要是进制转化，利用好丰富的API能把一些问题简单化。</p> \r\n</blockquote> \r\n<h3><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"_36\"></a>源代码及运行结果</h3> \r\n<p>代码：</p> \r\n<pre class=\"prettyprint\"><code class=\"prism language-java has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>deserts<span class=\"token punctuation\">.</span>network</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileNotFoundException</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">/**\r\n * @ClassName checkSumTest\r\n * @Description TODO\r\n * @Author deserts\r\n * @Date 2021/5/26 23:00\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> checkSumTest <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token class-name\">BufferedReader</span> bf <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token comment\">//读入文件，模拟从网络传输数据过来</span>\r\n            bf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\IDEAProjects\\\\jvm\\\\jvmTEST\\\\data.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">//读入一行数据，计算校验和</span>\r\n            <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> bf<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"传输的数据：\"</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">//转化为字符串数组，方便计算</span>\r\n                <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> chars <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> chars<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> chars<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                        <span class=\"token comment\">//每两个字符拼接成一个16位的字符串</span>\r\n                        <span class=\"token class-name\">String</span> h1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                        <span class=\"token class-name\">String</span> h2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                        <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                        <span class=\"token comment\">//这里使用StringBuilder拼接</span>\r\n                        <span class=\"token class-name\">String</span> ss <span class=\"token operator\">=</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                        <span class=\"token comment\">//将拼接完的字符串添加到list</span>\r\n                        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                        <span class=\"token comment\">//如果最后只剩一个字符(8位)，也直接加入list，后面参与校验和运算</span>\r\n                        <span class=\"token class-name\">String</span> h <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>chars<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n\r\n                <span class=\"token punctuation\">}</span>\r\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据的十六进制表示：\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> l <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">//将list里面每个字符串表示的16位数转化出来</span>\r\n                    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token comment\">//累加求和，先不考虑校验和多余16位的问题</span>\r\n                    sum <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token comment\">//将总和转化位字符串，如果长度大于4位就说明超过16位，再进行处理</span>\r\n                <span class=\"token class-name\">String</span> s1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                    <span class=\"token comment\">//这里采用将后4位和其余部分的字符串都转化为十进制然后相加，再转化为十六进制，检查新字符串长度是否还大于4</span>\r\n                    <span class=\"token comment\">//大于4重复上面的过程</span>\r\n                    <span class=\"token class-name\">String</span> s2 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token class-name\">String</span> s3 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    sum <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s3<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    s1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                <span class=\"token class-name\">String</span> res <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验和为：\"</span> <span class=\"token operator\">+</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                s <span class=\"token operator\">=</span> bf<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"***********一次数据的校验和计算完成***********\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bf <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                    bf<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li></ul></pre> \r\n<p>data.txt:</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/32f0fe8179c675d3035a5d9503383d93.png\" alt=\"image-20210527233003872\"></p> \r\n<p>运行结果：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b736a620ecda0f61ad407cee0cd58a44.png\" alt=\"image-20210527233033418\"></p>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/weixin_45834777/article/details/117340581&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 5, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (9, 'Git&Github学习笔记', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <h2><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"Git_2\"></a>一、Git简介</h2> \r\n<h3><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"1Git_4\"></a>1.Git结构</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/417ea8e934f8b6cae1f159475c0c1ed6.png\" alt=\"image-20210420141625320\"></p> \r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"2Git_8\"></a>2.Git和代码托管中心</h3> \r\n<ul><li>局域网环境下 \r\n  <ul><li>GitLab服务器</li></ul> </li><li>外网环境下 \r\n  <ul><li>GitHub</li><li>Gitee码云</li></ul> </li></ul> \r\n<h3><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"3_16\"></a>3.本地库和远程库</h3> \r\n<h4><a id=\"_18\"></a>团队内协作</h4> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b136ec8f82f62851fd9ae94c7f7ee525.png\" alt=\"image-20210420142315751\"></p> \r\n<h4><a id=\"_22\"></a>团队间协作</h4> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cee23fb7807088d76a08ac0b20a79fb9.png\" alt=\"image-20210420142539796\"></p> \r\n<h3><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"4git_28\"></a>4.git工作流程</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/6198508fc960945e31414d526ee60731.png\" alt=\"image-20210420135146623\"></p> \r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"Git_32\"></a>二、Git命令行操作</h2> \r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"1_34\"></a>1.本地库初始化</h3> \r\n<p>描述：创建一个文件夹，作为本地仓库。命令行使用git init在该目录下初始化仓库。初始化完成后会生成一个.git隐藏目录。</p> \r\n<p>命令：git init</p> \r\n<p>效果：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0bd6d40fa1b3ab5e5b3f0ce1aa7be872.png\" alt=\"image-20210420143116275\"></p> \r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"2_44\"></a>2.设置签名</h3> \r\n<ul><li> <p>形式</p> \r\n  <ul><li>用户名：deserts</li><li>Email地址：zoea@126.com</li></ul> </li><li> <p>作用：区分不同开发人员的身份</p> </li><li> <p>命令</p> \r\n  <ul><li> <p>项目/仓库级别：仅在本地仓库范围内有效</p> \r\n    <ul><li>git config user.name deserts</li><li>git config user.eamil zoea@126.com</li></ul> </li><li> <p>系统用户级别：登录当前操作系统的用户范围</p> \r\n    <ul><li>git config --global user.name deserts_g</li><li>git config --global user.eamil zoea_g@126.com</li></ul> </li><li> <p>级别优先级</p> \r\n    <ul><li>就近原则：项目级别优于系统用户级别，两个都有时采用项目级别</li><li>不允许两个级别都没有</li></ul> </li><li> <p>示例：</p> <p><img src=\"https://img-blog.csdnimg.cn/img_convert/da07eb8a5cadf435f711fbca7d4a5dce.png\" alt=\"image-20210420144736368\"></p> </li><li> <p>项目级别签名信息保存的位置</p> <p>.git/config</p> <p><img src=\"https://img-blog.csdnimg.cn/img_convert/0b8c6d1bb17461eaa7a5844f13172620.png\" alt=\"image-20210420144907964\"></p> </li><li> <p>查看全局签名配置：放在家目录下的.gitconfig文件下</p> <p><img src=\"https://img-blog.csdnimg.cn/img_convert/8d4952bf6f9dabe727bdf6c7c73cae31.png\" alt=\"image-20210420145253591\"></p> </li></ul> </li></ul> \r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"3_84\"></a>3.添加提交和查看状态</h3> \r\n<p>命令：git status</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/2c8a8895926d8fd75120c286c8042e57.png\" alt=\"image-20210420145517823\"></p> \r\n<p>创建一个文件后，查看状态：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5e2e4611f475a33fd876e3ebfe6d8042.png\" alt=\"image-20210420145849148\"></p> \r\n<p>这时提示可以使用git add 去追踪</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/435d802f54e2b7b6d080d1744fb4c34f.png\" alt=\"image-20210420150039692\"></p> \r\n<ul><li>git add：将文件添加到暂存区</li><li>git rm --cached ：撤销添加到暂存区</li><li>git commit: 将暂存区的文件提交到本地仓库</li></ul> \r\n<p>当文件被修改后：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f385841c92d2428bb936b48ccab654ab.png\" alt=\"image-20210420151633609\"></p> \r\n<p>使用git add添加到暂存区</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d2054499d140a5908d90b10b6cf2fe48.png\" alt=\"image-20210420152142436\"></p> \r\n<p>使用git commit -m “modified” hello.txt添加注释并提交</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/03015103cda32da7b9b65d395c7a61c1.png\" alt=\"image-20210420152323221\"></p> \r\n<h3><a name=\"t9\"></a><a name=\"t9\"></a><a id=\"4_114\"></a>4.版本前进后退</h3> \r\n<p>查看版本历史记录：git log</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/448c18e55a5b80bdf18c9853e6692a40.png\" alt=\"image-20210420152528595\"></p> \r\n<p>git log --pretty=oneline</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/40598cddcdaabbaf74b63fca1adfa859.png\" alt=\"image-20210420153352784\"></p> \r\n<p>git log --oneline</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/46a7edd814fc4a956c8568bd622158cc.png\" alt=\"image-20210420153432848\"></p> \r\n<p>git reflog</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/21327360dabe0df5828bb5b8b901f0d7.png\" alt=\"image-20210420153549476\"></p> \r\n<blockquote> \r\n <p>版本前进后退的本质：移动HEAD指针</p> \r\n</blockquote> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/36c06d5446112b7e58ae9bef55dfd381.png\" alt=\"image-20210420153929276\"></p> \r\n<h4><a id=\"_136\"></a>使用索引值操作</h4> \r\n<p>命令：git reset --hard 部分索引值</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7483612c3ad961013f1554499c0bcbf5.png\" alt=\"image-20210420154329690\"></p> \r\n<h4><a id=\"reset_142\"></a>reset三个参数对比</h4> \r\n<ul><li>hard: 在本地库移动HEAD指针，并且重置暂存区和工作区</li><li>soft: 仅仅是在本地库移动HEAD指针</li><li>mixed:在本地库移动HEAD指针，并且重置暂存区</li></ul> \r\n<h3><a name=\"t10\"></a><a name=\"t10\"></a><a id=\"5_148\"></a>5.删除文件后找回</h3> \r\n<p>删除文件</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/aa424d595ebf80da4fa6776fa0939775.png\" alt=\"image-20210420161159581\"></p> \r\n<p>提交到暂存区</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cbf3db0771f2a8677aef8d0a2f0f67dc.png\" alt=\"image-20210420161220280\"></p> \r\n<p>提交到本地仓库：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1beeb98f9acde72c53b368156ada1c5d.png\" alt=\"image-20210420161338057\"></p> \r\n<p>版本回退：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9cf74c6e95e93cb0069e7c58bbcb8f1a.png\" alt=\"image-20210420161524995\"></p> \r\n<p>被删除的文件可以恢复。</p> \r\n<ul><li>添加到暂存区的文件删除恢复： git reset --hard HEAD</li></ul> \r\n<h3><a name=\"t11\"></a><a name=\"t11\"></a><a id=\"6_170\"></a>6.比较文件</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/bd143d2bd84e2b59a969457dd2107836.png\" alt=\"image-20210420162418573\"></p> \r\n<h3><a name=\"t12\"></a><a name=\"t12\"></a><a id=\"7Git_174\"></a>7.Git分支</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/65f733c5799614f674a5e6d883060b13.png\" alt=\"image-20210420181858551\"></p> \r\n<h4><a id=\"_178\"></a>查看分支版本</h4> \r\n<p>命令：git branch -v</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/3a904946d7dcf1a7ac05acdc926fb9a4.png\" alt=\"image-20210420182123994\"></p> \r\n<h4><a id=\"_184\"></a>创建分支</h4> \r\n<p>命令：git branch 分支名</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/549c23d9a0a15363746cd2a03f305056.png\" alt=\"image-20210420182215040\"></p> \r\n<h4><a id=\"_190\"></a>切换分支</h4> \r\n<p>命令：git checkout 分支名</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9a8dbd753af9ecde0a7ac3eba90016f5.png\" alt=\"image-20210420182629769\"></p> \r\n<h4><a id=\"_196\"></a>合并分支</h4> \r\n<p>步骤：</p> \r\n<ol><li>切换到被合并的分支上面</li><li>使用git merge 【合并分支名】来合并分支</li></ol> \r\n<p>示例：</p> \r\n<p>hot_fix分支对test.txt进行修改，并切换到master分支</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0ebb13ac82958f9a27b25e5bc783d684.png\" alt=\"image-20210420183131611\"></p> \r\n<p>合并hot_fix分支：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/6d5eca228037a8a7769bd7e5132fd06a.png\" alt=\"image-20210420183328123\"></p> \r\n<h4><a id=\"_213\"></a>解决合并分支冲突</h4> \r\n<p>冲突的产生：不同分支的同一个文件都被修改了，这时要合并分支时两个修改的文件要指定一个为合并后的分支的文件。这时需要决定哪一个修改并入该分支中。</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/29550121ab31b11ac6d146f118a35850.png\" alt=\"image-20210420184638819\"></p> \r\n<p>冲突的表现：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/19afb982aa4a27508e9f39df473122b8.png\" alt=\"image-20210420184911563\"></p> \r\n<p>这时需要我们去修改这个文件，作为最终修改的版本</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5d7c9cf15d2350d37bd95dc01d8a2cb4.png\" alt=\"image-20210420185110655\"></p> \r\n<p>添加到暂存区：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cfb58c61adc6c59f87a2f813c3792269.png\" alt=\"image-20210420185157186\"></p> \r\n<p>提交到本地仓库（不能带文件名）：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/dbf35118e3aff2ffe078a33bcbd74307.png\" alt=\"image-20210420185303974\"></p> \r\n<p>步骤总结：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0acfa9c8b648881661f7d146386b916b.png\" alt=\"image-20210420185328752\"></p> \r\n<h2><a name=\"t13\"></a><a name=\"t13\"></a><a id=\"Git_239\"></a>三、Git基本原理</h2> \r\n<h3><a name=\"t14\"></a><a name=\"t14\"></a><a id=\"1_241\"></a>1.哈希加密算法</h3> \r\n<p>对两个文件进行加密，通过加密结果比对来验证两个文件是否发生了变化，若发生了变化，两个结果相差会很大。</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ca44f0ed2a6affd344e3fc833aa47037.png\" alt=\"image-20210420190418430\"></p> \r\n<h3><a name=\"t15\"></a><a name=\"t15\"></a><a id=\"2Git_247\"></a>2.Git保存版本的机制</h3> \r\n<p>Git的文件管理机制：使用快照机制</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/29a3166b162ac4d35dbf82b629acf8a9.png\" alt=\"image-20210420190857566\"></p> \r\n<h3><a name=\"t16\"></a><a name=\"t16\"></a><a id=\"3Git_253\"></a>3.Git分支管理的机制</h3> \r\n<p>本质是HEAD指针的切换</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/3da6a6c6650736de2a7bbced1263ab04.png\" alt=\"image-20210420191255807\"></p> \r\n<h2><a name=\"t17\"></a><a name=\"t17\"></a><a id=\"Github_259\"></a>四、使用Github</h2> \r\n<h3><a name=\"t18\"></a><a name=\"t18\"></a><a id=\"1_261\"></a>1.本地库和远程库的交互</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e65bb920ebcf089208fd114bc65c4085.png\" alt=\"image-20210420195727754\"></p> \r\n<h3><a name=\"t19\"></a><a name=\"t19\"></a><a id=\"2GitHub_265\"></a>2.GitHub创建远程仓库</h3> \r\n<p>1.注册一个账号</p> \r\n<p>2.创建一个远程仓库</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e34caf3e9cb67fa35ebc1738ee28c2cb.png\" alt=\"image-20210420195944586\"></p> \r\n<p>填写创建仓库的信息</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/419b7a743a3a3778a11b3f51bd4b26d9.png\" alt=\"image-20210420200117907\"></p> \r\n<p>创建成功</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f6f0677a42994b7b67c9effa3b5e8ed3.png\" alt=\"image-20210420221222166\"></p> \r\n<h3><a name=\"t20\"></a><a name=\"t20\"></a><a id=\"3push_281\"></a>3.往远程仓库push</h3> \r\n<p>1.查看远程仓库地址</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/adbc732b92aedc49a7964f850ef69687.png\" alt=\"image-20210420221935586\"></p> \r\n<p>2.给远程仓库起别名</p> \r\n<ul><li>命令： git remote add 别名 地址</li></ul> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/db014b4088df2b628432db17fb65c97c.png\" alt=\"image-20210420222231881\"></p> \r\n<p>3.推送</p> \r\n<ul><li>命令：git push 别名 分支名</li></ul> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/6011a7e8ae69c2e6edcc159d317f9110.png\" alt=\"image-20210420222559881\"></p> \r\n<p>这时会有一个master分支了</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1163f383b596e8ab51f7a126811337b8.png\" alt=\"image-20210420222658948\"></p> \r\n<h3><a name=\"t21\"></a><a name=\"t21\"></a><a id=\"4clone_303\"></a>4.clone操作</h3> \r\n<p>命令：git clone 地址（默认项目主分支，项目创建时的分支）</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e40d5819cf222a3860146d24573222be.png\" alt=\"image-20210420223442744\"></p> \r\n<p>从远程仓库克隆到本地有三个效果：</p> \r\n<ul><li>完整地把远程库下载到本地</li><li>创建origin远程别名，可以使用这个别名直接push</li><li>初始化本地库</li></ul> \r\n<p>clone指定分支：git clone -b 分支名 地址</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4ad003462af777ab4cd5bacf97f99192.png\" alt=\"image-20210420225205440\"></p> \r\n<h3><a name=\"t22\"></a><a name=\"t22\"></a><a id=\"5_319\"></a>5.加入团队</h3> \r\n<p>本地clone远程仓库后，需要加入团队后才能push。</p> \r\n<p>1.添加队员</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5c9bc2f940a6f7b2fa1e6c3e01bf3af1.png\" alt=\"image-20210420234224401\"></p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d4e85a1662e3e5b1062a7108dbdda518.png\" alt=\"image-20210420234304849\"></p> \r\n<p>2.复制邀请链接发给队员</p> \r\n<p>3.队员访问邀请链接，加入团队。这样队员就能push了。</p> \r\n<h3><a name=\"t23\"></a><a name=\"t23\"></a><a id=\"6pull_333\"></a>6.pull拉取</h3> \r\n<p>当队员B修改了，队员A需要拉取代码进行开发；需要先fetch查看一下（读操作）</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/8c33868c529e5e44b757d00d1cd03185.png\" alt=\"image-20210420232830052\"></p> \r\n<p>git fetch origin main:</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/66c3bf75b38a48d7c21d0d540323df22.png\" alt=\"image-20210420233950781\"></p> \r\n<p>查看远程库的内容：git checkout origin/main， 这样切换到分支就可以查看远程仓库的内容了</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a33745f215c6653d9fe517d17c080bac.png\" alt=\"image-20210420234625068\"></p> \r\n<p>查看完修改完，可以merge，merge完远程的东西就都合并了</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/54b6c571384da86f78ddd181be82516b.png\" alt=\"image-20210420235249012\"></p> \r\n<p>pull = fetch + merge</p> \r\n<h3><a name=\"t24\"></a><a name=\"t24\"></a><a id=\"7_355\"></a>7.解决冲突</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9ab92bc1f4388525466819776af2afcd.png\" alt=\"image-20210421002017528\"></p> \r\n<h3><a name=\"t25\"></a><a name=\"t25\"></a><a id=\"8_359\"></a>8.跨团队之间协作</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/fe6e693aa3e92d024ea753add76b48a4.png\" alt=\"image-20210422091742251\"></p> \r\n<p>1.让别的团队成员访问你的远程仓库地址，在远程仓库中fork</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a1c3d5ea5472b6f633f6e74759dbe59a.png\" alt=\"image-20210422092155364\"></p> \r\n<p>2.fork之后会到自己远程仓库，自己可以进行操作</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/623d0a210e29b5f0096964719bda6eb8.png\" alt=\"image-20210422092340398\"></p> \r\n<p>3.自己在本地和远程仓库操作后，可以想原项目的远程仓库发起pull request</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/67cbac371afef52c0c78a634eeb11f13.png\" alt=\"image-20210422092935432\"></p> \r\n<p>4.原项目可以审核并讨论</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d19a2f42b0f72ee1e61a54df3b9f4531.png\" alt=\"image-20210422093016124\"></p> \r\n<h3><a name=\"t26\"></a><a name=\"t26\"></a><a id=\"9SSH_379\"></a>9.SSH免密登录</h3> \r\n<p>1.进入家目录： cd</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/2360f125dfb887fd46b2466aeefc4ef5.png\" alt=\"image-20210422093825836\"></p> \r\n<p>2.把以前的SSH目录删掉： rm -r .ssh/</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5dc00a93ef1df030e1c8816cc1c96fcb.png\" alt=\"image-20210422094030651\"></p> \r\n<p>3.生成ssh目录：ssh-keygen -t ras -C GitHub邮箱</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/47499446e82221870f84ba7cddf857a9.png\" alt=\"image-20210422094302717\"></p> \r\n<p>4.进入.ssh目录查看id_ras.pub文件，并复制：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/8d246b07d3f96388ed9a079ea96d429a.png\" alt=\"image-20210422094448453\"></p> \r\n<p>5.在自己GitHub账号上的settings里，点击SSH and GRG keys设置SSH keys</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9ca8ce45834a661ff33994068bd6e704.png\" alt=\"image-20210422094818240\"></p> \r\n<p>6.输入密码确认</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/8204410dedc036ec6af33d3b50bde3a0.png\" alt=\"image-20210422094910742\"></p> \r\n<p>7.可以看到已经生成的SSH keys</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a2a86f42d013ad741c1abfb0c9178e05.png\" alt=\"image-20210422095001367\"></p> \r\n<p>8.回到命令行测试。修改文件并commit到本地仓库</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/2093ad55cba51bd57887981591a660aa.png\" alt=\"image-20210422095303357\"></p> \r\n<p>9.到GitHub仓库上复制SSH地址</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/23edd8f885dc4fa580ee8565631d0ceb.png\" alt=\"image-20210422095450034\"></p> \r\n<p>10.创建本地的SSH地址别名</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1c59230525ff6a2f64612c0a4d35daae.png\" alt=\"image-20210422095620221\"></p> \r\n<p>11.把本地仓库的内容推送到远程仓库上，这时不需要密码登录</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ed520208791a16d03bda27dab4e743f5.png\" alt=\"image-20210422095749127\"></p> \r\n<p>12.可以看到，已经成功推送了</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/31446c6e969b9426466b9d27109f8580.png\" alt=\"image-20210422095905908\"></p> \r\n<h2><a name=\"t27\"></a><a name=\"t27\"></a><a id=\"IDEAGit_429\"></a>五、IDEA中使用Git</h2> \r\n<h3><a name=\"t28\"></a><a name=\"t28\"></a><a id=\"1Git_431\"></a>1.安装Git</h3> \r\n<p>已经安装Git，IDEA中会自动集成</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d7989b5481370218f04d2ad7af2bd39e.png\" alt=\"image-20210422100418998\"></p> \r\n<h3><a name=\"t29\"></a><a name=\"t29\"></a><a id=\"2Github_437\"></a>2.登录Github账号</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/73dfeb9339f3f4707526cd69721f43b6.png\" alt=\"image-20210422145615955\"></p> \r\n<h3><a name=\"t30\"></a><a name=\"t30\"></a><a id=\"3_441\"></a>3.创建本地仓库</h3> \r\n<p>点击创建</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/88c77dd098315389d305222ea284a21f.png\" alt=\"image-20210422145015702\"></p> \r\n<p>创建成功</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/24ab37328bd7dba9668a200b4c3f6e3d.png\" alt=\"image-20210422145034297\"></p> \r\n<p>在本地也能看到.git文件夹了，说明本地仓库创建成功</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/6e4a6541b77b5944f14c8a4a287b6c4c.png\" alt=\"image-20210422145234023\"></p> \r\n<h3><a name=\"t31\"></a><a name=\"t31\"></a><a id=\"4addcommitpush_455\"></a>4.add、commit、push等操作</h3> \r\n<p>点击项目右键的Git，可以进行命令行的那些操作：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/723ec2ada034734027e1e109a5df74c2.png\" alt=\"image-20210422150910212\"></p> \r\n<p>常用的快捷操作：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f1ca36012cbeff7d7b5a9d94cf97fd2f.png\" alt=\"image-20210422150934178\"></p> \r\n<p>示例：</p> \r\n<p>1.创建一个新文件，创建完成后可以选择直接添加到暂存区</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c68f6367be0c9930aace1e4e2578e872.png\" alt=\"image-20210422151021970\"></p> \r\n<p>2.将所有文件添加到暂存区</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b0efe66adc26dca68cce065ae20b04b4.png\" alt=\"image-20210422151231978\"></p> \r\n<p>3.提交到本地库</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/de6fd9c7eadbe989eb9278544d968ec1.png\" alt=\"image-20210422151306027\"></p> \r\n<p>选择文件和添加注释</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f1ee9f9d57546604de2d1614297f4f67.png\" alt=\"image-20210422151346143\"></p> \r\n<h3><a name=\"t32\"></a><a name=\"t32\"></a><a id=\"5_483\"></a>5.查看历史</h3> \r\n<p>点击快捷键可以查看历史</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cf9e080e0455ebc924e237e96879d265.png\" alt=\"image-20210422151909874\"></p> \r\n<p>点击具体的版本还可以查看变化的详情</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5b13a944659842587fb4d7fb047e8fa4.png\" alt=\"image-20210422152007004\"></p> \r\n<p>版本回退：点击具体的版本右键复制哈希值</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1c98312c70b76d69cedaf76b4dde1e6c.png\" alt=\"image-20210422152518186\"></p> \r\n<p>回退版本：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/123fc6c60f77bc0abf3ab97a801caf8d.png\" alt=\"image-20210422152554972\"></p> \r\n<p>跟据哈希值回退：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/3a1ba027c39a7e041a1204c6003faaa8.png\" alt=\"image-20210422153100245\"></p> \r\n<p>查看前面的历史版本需要在控制台中，可以在IDEA中集成Git</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/27c2bfdeedbe10697abd3da65f1ce292.png\" alt=\"image-20210422154529062\"></p> \r\n<p>使用Git命令：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f1c7797d47ae1928732ab4ae8981e6f5.png\" alt=\"image-20210422154555470\"></p> \r\n<h3><a name=\"t33\"></a><a name=\"t33\"></a><a id=\"6_513\"></a>6.创建分支、合并分支</h3> \r\n<p>创建分支</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0f6f820ce47cbfabbdb44f4987c3d8e5.png\" alt=\"image-20210422155500638\"></p> \r\n<p>合并分支</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/191352ed76f17a8db56ebaa506492981.png\" alt=\"image-20210422155607886\"></p> \r\n<p>解决冲突：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c239117d3bd70efbf6030840414be516.png\" alt=\"image-20210422155933542\"></p> \r\n<h3><a name=\"t34\"></a><a name=\"t34\"></a><a id=\"7GitHub_527\"></a>7.将本地库上传到GitHub</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5a388cc4d992bee6521033eae65e4627.png\" alt=\"image-20210422160249771\"></p> \r\n<p>选择地址</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e81d53e4c8d6f7256326256f1fcd1fa2.png\" alt=\"image-20210422160341270\"></p> \r\n<p>选择分支和版本上传</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ff5fa64dc240b0d99fa6807cf1ded643.png\" alt=\"image-20210422160959694\"></p> \r\n<h3><a name=\"t35\"></a><a name=\"t35\"></a><a id=\"8_539\"></a>8.更新本地库</h3> \r\n<p>当远程库发生修改，取push时自己不是最新版本，会失败</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/271ce6061f76600b66254ba13e816770.png\" alt=\"image-20210422161541787\"></p> \r\n<p>pull操作：</p> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/699047e779bc089145b8136307be43cd.png\" alt=\"image-20210422162018420\"></p> \r\n<h2><a name=\"t36\"></a><a name=\"t36\"></a><a id=\"Git_549\"></a>六、Git工作流</h2> \r\n<h3><a name=\"t37\"></a><a name=\"t37\"></a><a id=\"1_551\"></a>1.概念</h3> \r\n<p>在开发中使用Git的方式</p> \r\n<h3><a name=\"t38\"></a><a name=\"t38\"></a><a id=\"2_555\"></a>2.分类</h3> \r\n<ul><li> <p>集中式工作流：类似与SVN</p> <p><img src=\"https://img-blog.csdnimg.cn/img_convert/f3741f077b2b831f4a07e3d1ee69ad56.png\" alt=\"image-20210422162916531\"></p> </li><li> <p>GitFlow工作流：团队内使用分支，常用</p> <p><img src=\"https://img-blog.csdnimg.cn/img_convert/af02d8c595ecc9439c2c3f9f78b61e93.png\" alt=\"image-20210422162929510\"></p> </li><li> <p>Forking工作流：给团队外成员；虚拟团队</p> <p><img src=\"https://img-blog.csdnimg.cn/img_convert/aad03dfbdd7c8d3f2b1be14a7fde6111.png\" alt=\"image-20210422162943303\"></p> </li></ul> \r\n<h3><a name=\"t39\"></a><a name=\"t39\"></a><a id=\"3GitFlow_569\"></a>3.GitFlow工作流</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9f3c7e734694ce47c48e202b8e63ada2.png\" alt=\"image-20210422163306433\"></p>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/weixin_45834777/article/details/116034575&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (10, '关于ubuntu安装vmware tools之后和主机之间依然不能拖拽文件（另辟蹊径）', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-light\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <blockquote> \r\n <p>首先是，我是shabi<br> 安装了好几次vmware tools,找了很多方法，结果可想而知。（也是我为什么写下这篇博客的原因，机缘巧合发现可以）</p> \r\n</blockquote> \r\n<p>其实<strong>在主机或是虚拟机上右键复制（ctrl+c）到虚拟机或是主机右键粘贴</strong> 就可以了（你说你拖什么鬼咯）</p> \r\n<p>当然<strong>前提</strong>是你的vmware tools已经装好了。<strong>（提示重新安装就是装好了）</strong><br> <img src=\"https://img-blog.csdnimg.cn/20210504184151403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p> \r\n<hr> \r\n<p><strong>【推荐阅读】</strong><br> <a href=\"https://blog.csdn.net/weixin_48557496/article/details/116354259?spm=1001.2014.3001.5501\">ubuntu在vmware上使用过程遇到的问题</a></p> \r\n<p><em><strong>当然如果你解决了怎么实现拖的，可以分享在评论区。</strong></em></p>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/weixin_48557496/article/details/116403478&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 7, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (11, '第 45 届国际大学生程序设计竞赛（ICPC）亚洲区域赛（昆明）HIJL待续', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <p><a href=\"https://ac.nowcoder.com/acm/contest/12548#question\">第 45 届国际大学生程序设计竞赛（ICPC）亚洲区域赛（昆明）</a><br> 五四青年节补补上次昆明的题目，熟悉下区域赛的难度和类型。<br> 还没写好，因为要睡觉了，等以后再补坑把<br> </p>\r\n<div class=\"toc\">\r\n <h3><a name=\"t0\"></a><a name=\"t0\"></a>文章目录</h3>\r\n <ul><li><ul><li><a href=\"#HHard_Calculation_4\" target=\"_self\">H.Hard Calculation</a></li><li><a href=\"#LSimone_and_graph_coloring_9\" target=\"_self\">L.Simone and graph coloring</a></li><li><a href=\"#IMr_Main_and_Windmills_72\" target=\"_self\">I.Mr. Main and Windmills</a></li><li><a href=\"#JParallel_Sort_199\" target=\"_self\">J.Parallel Sort</a></li></ul>\r\n </li></ul>\r\n</div>\r\n<p></p> \r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"HHard_Calculation_4\"></a>H.Hard Calculation</h2> \r\n<p>题意：真签到题。第1年举办这次昆明ICPC比赛是2021年，问第n年具体的年份是多少？</p> \r\n<p>输出：2020+n</p> \r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"LSimone_and_graph_coloring_9\"></a>L.Simone and graph coloring</h2> \r\n<p>题意：当i&lt;j且a[i]&gt;a[j]，存在点i到点j的一条边，现在需要对图进行染色，且相邻两个点的颜色不一样</p> \r\n<p>题解：即存在逆序对时才会有边，当然也存在孤独的一个点，线段树/树状数组类似求逆序对。</p> \r\n<p>对于点a[i]，如果[0,1,2…n-1]存在值为[a[i]+1,a[i+2]…n]的点，则需要找当前颜色种类最大值+1</p> \r\n<pre class=\"prettyprint\"><code class=\"prism language-cpp has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h&gt;</span></span>\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> ll long long</span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> endl \"\\n\"</span>\r\n<span class=\"token keyword\">const</span> ll MAX<span class=\"token operator\">=</span><span class=\"token number\">1e6</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> ll inf<span class=\"token operator\">=</span><span class=\"token number\">0x3f3f3f3f</span><span class=\"token punctuation\">;</span>\r\nll a<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>cnt<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">struct</span> node<span class=\"token punctuation\">{<!-- --></span>\r\n	ll ma<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>tree<span class=\"token punctuation\">[</span>MAX<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token keyword\">void</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>ll l<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ll r<span class=\"token operator\">=</span>n<span class=\"token punctuation\">,</span>ll p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n	tree<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ma<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">==</span>r<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span>\r\n	ll mid<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">+</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token function\">build</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token function\">build</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>ll l<span class=\"token punctuation\">,</span>ll r<span class=\"token punctuation\">,</span>ll val<span class=\"token punctuation\">,</span>ll tl<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ll tr<span class=\"token operator\">=</span>n<span class=\"token punctuation\">,</span>ll p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tl<span class=\"token operator\">&gt;=</span>l<span class=\"token operator\">&amp;&amp;</span>tr<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n		tree<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ma<span class=\"token operator\">+</span><span class=\"token operator\">=</span>val<span class=\"token punctuation\">;</span>	\r\n		<span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n	ll mid<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>tl<span class=\"token operator\">+</span>tr<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> \r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">&gt;=</span>l<span class=\"token punctuation\">)</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">,</span>tl<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">&lt;</span>r<span class=\"token punctuation\">)</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">,</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>tr<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	tree<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ma<span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ma<span class=\"token punctuation\">,</span>tree<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ma<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> \r\nll <span class=\"token function\">getmax</span><span class=\"token punctuation\">(</span>ll l<span class=\"token punctuation\">,</span>ll r<span class=\"token punctuation\">,</span>ll tl<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ll tr<span class=\"token operator\">=</span>n<span class=\"token punctuation\">,</span>ll p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tl<span class=\"token operator\">&gt;=</span>l<span class=\"token operator\">&amp;&amp;</span>tr<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> tree<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ma<span class=\"token punctuation\">;</span>\r\n	ll mid<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>tl<span class=\"token operator\">+</span>tr<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n	ll res<span class=\"token operator\">=</span><span class=\"token operator\">-</span>inf<span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">&gt;=</span>l<span class=\"token punctuation\">)</span>res<span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span><span class=\"token function\">getmax</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>tl<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">&lt;</span>r<span class=\"token punctuation\">)</span>res<span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span><span class=\"token function\">getmax</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>tr<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span> \r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n	ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>cout<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span>cin<span class=\"token operator\">&gt;&gt;</span>t<span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n		cin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token punctuation\">;</span> cnt<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>cin<span class=\"token operator\">&gt;&gt;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \r\n		<span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n			ll x<span class=\"token operator\">=</span><span class=\"token function\">getmax</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token function\">update</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n		<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>cnt<span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		cout<span class=\"token operator\">&lt;&lt;</span>cnt<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\r\n		cout<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n	<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li></ul></pre> \r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"IMr_Main_and_Windmills_72\"></a>I.Mr. Main and Windmills</h2> \r\n<p>题意：从起点(xs,ys)沿线段到达(xt,yt)，分别给出直线的一边有n个星星的坐标。问，在沿线段的途中对于点hi与当前点连直线，问直线左右点数变化了点k个时最早出现的位置<br> <img src=\"https://img-blog.csdnimg.cn/20210505093150169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hyZDUzNTUyMzU5Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p> \r\n<p>题解：计算几何，n^2求出每两个点所构成与原来线段的<strong>交点</strong>，按照从起点到该交点距离大小进行<strong>升序排序</strong>。</p> \r\n<p>对于点h，左右变化k次，答案即使是点h与其他点所构成直线与原线段交点排序后的数组中，第k个点，若该数组大小小于k则输出-1。</p> \r\n<p>主要注意的是<strong>esp精度不要大小</strong>，且需要注意两点之间所构造的直线需要注意不存在斜率的情况。</p> \r\n<pre class=\"prettyprint\"><code class=\"prism language-cpp has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">//#pragma GCC optimize(2)</span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h&gt;</span> </span>\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> endl \"\\n\" </span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> ll long long</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> N<span class=\"token operator\">=</span><span class=\"token number\">1e3</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">struct</span> Point<span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">double</span> dis<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">typedef</span> Point Vector<span class=\"token punctuation\">;</span>\r\n\r\nVector <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span>Vector B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>B<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>B<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\nVector <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span>Vector B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>B<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>B<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\nVector <span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nVector <span class=\"token keyword\">operator</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">/</span>p<span class=\"token punctuation\">,</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">/</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Point <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> Point <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">||</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">==</span>b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&amp;&amp;</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> eps<span class=\"token operator\">=</span><span class=\"token number\">1e-10</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>eps<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> x<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token operator\">?</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">==</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Point<span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> Point <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">double</span> <span class=\"token function\">Dot</span><span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span>Vector B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>B<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>B<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">double</span> <span class=\"token function\">Length</span><span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token function\">Dot</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">double</span> <span class=\"token function\">Angle</span><span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span>Vector B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">acos</span><span class=\"token punctuation\">(</span><span class=\"token function\">Dot</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">Length</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">Length</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">double</span> <span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span>Vector B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>B<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>B<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\nVector <span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span>Vector A<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> rad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>rad<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>rad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>A<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>rad<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>A<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>rad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nPoint <span class=\"token function\">GetLineIntersection</span><span class=\"token punctuation\">(</span>Point P<span class=\"token punctuation\">,</span>Vector v<span class=\"token punctuation\">,</span>Vector Q<span class=\"token punctuation\">,</span>Vector w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    Vector u<span class=\"token operator\">=</span>P<span class=\"token operator\">-</span>Q<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">double</span> t<span class=\"token operator\">=</span><span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> P<span class=\"token operator\">+</span>v<span class=\"token operator\">*</span>t<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">bool</span> <span class=\"token function\">SegmentProperInterSection</span><span class=\"token punctuation\">(</span>Point a1<span class=\"token punctuation\">,</span>Point a2<span class=\"token punctuation\">,</span>Point b1<span class=\"token punctuation\">,</span>Point b2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">double</span> c1<span class=\"token operator\">=</span><span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>a2<span class=\"token operator\">-</span>a1<span class=\"token punctuation\">,</span>b1<span class=\"token operator\">-</span>a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>c2<span class=\"token operator\">=</span><span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>a2<span class=\"token operator\">-</span>a1<span class=\"token punctuation\">,</span>b2<span class=\"token operator\">-</span>a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">double</span> c3<span class=\"token operator\">=</span><span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>b2<span class=\"token operator\">-</span>b1<span class=\"token punctuation\">,</span>a1<span class=\"token operator\">-</span>b1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>c4<span class=\"token operator\">=</span><span class=\"token function\">Cross</span><span class=\"token punctuation\">(</span>b2<span class=\"token operator\">-</span>b1<span class=\"token punctuation\">,</span>a2<span class=\"token operator\">-</span>b1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span>c4<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">bool</span> <span class=\"token function\">OnSegment</span><span class=\"token punctuation\">(</span>Point p<span class=\"token punctuation\">,</span>Point a1<span class=\"token punctuation\">,</span>Point a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">dcmp</span><span class=\"token punctuation\">(</span><span class=\"token function\">Dot</span><span class=\"token punctuation\">(</span>a1<span class=\"token operator\">-</span>p<span class=\"token punctuation\">,</span>a2<span class=\"token operator\">-</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">double</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>Point <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span>Point <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">struct</span> node<span class=\"token punctuation\">{<!-- --></span>\r\n    Point p<span class=\"token punctuation\">;</span>\r\n    vector<span class=\"token operator\">&lt;</span>Point<span class=\"token operator\">&gt;</span> Node<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>a<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">bool</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span>Point a<span class=\"token punctuation\">,</span>Point b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>dis<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>cout<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">;</span> cin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token operator\">&gt;&gt;</span>m<span class=\"token punctuation\">;</span>\r\n    Point S<span class=\"token punctuation\">,</span>T<span class=\"token punctuation\">;</span> cin<span class=\"token operator\">&gt;&gt;</span>S<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&gt;&gt;</span>S<span class=\"token punctuation\">.</span>y<span class=\"token operator\">&gt;&gt;</span>T<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&gt;&gt;</span>T<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>cin<span class=\"token operator\">&gt;&gt;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&gt;&gt;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span>j<span class=\"token punctuation\">)</span><span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\r\n            Point temp<span class=\"token punctuation\">;</span> <span class=\"token comment\">//</span>\r\n            Vector v<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>p<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">;</span>\r\n            Point P<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//</span>\r\n            Vector w<span class=\"token operator\">=</span>S<span class=\"token operator\">-</span>T<span class=\"token punctuation\">;</span>\r\n            temp<span class=\"token operator\">=</span><span class=\"token function\">GetLineIntersection</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            temp<span class=\"token punctuation\">.</span>dis<span class=\"token operator\">=</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnSegment</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">,</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span>cin<span class=\"token operator\">&gt;&gt;</span>h<span class=\"token operator\">&gt;&gt;</span>k<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">)</span>cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>cmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            Point X<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Node<span class=\"token punctuation\">[</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            cout<span class=\"token operator\">&lt;&lt;</span>fixed<span class=\"token operator\">&lt;&lt;</span><span class=\"token function\">setprecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span>X<span class=\"token punctuation\">.</span>x<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token operator\">&lt;&lt;</span>X<span class=\"token punctuation\">.</span>y<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> \r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li><li style=\"color: rgb(153, 153, 153);\">88</li><li style=\"color: rgb(153, 153, 153);\">89</li><li style=\"color: rgb(153, 153, 153);\">90</li><li style=\"color: rgb(153, 153, 153);\">91</li><li style=\"color: rgb(153, 153, 153);\">92</li><li style=\"color: rgb(153, 153, 153);\">93</li><li style=\"color: rgb(153, 153, 153);\">94</li><li style=\"color: rgb(153, 153, 153);\">95</li><li style=\"color: rgb(153, 153, 153);\">96</li><li style=\"color: rgb(153, 153, 153);\">97</li><li style=\"color: rgb(153, 153, 153);\">98</li><li style=\"color: rgb(153, 153, 153);\">99</li><li style=\"color: rgb(153, 153, 153);\">100</li><li style=\"color: rgb(153, 153, 153);\">101</li><li style=\"color: rgb(153, 153, 153);\">102</li><li style=\"color: rgb(153, 153, 153);\">103</li><li style=\"color: rgb(153, 153, 153);\">104</li><li style=\"color: rgb(153, 153, 153);\">105</li><li style=\"color: rgb(153, 153, 153);\">106</li><li style=\"color: rgb(153, 153, 153);\">107</li><li style=\"color: rgb(153, 153, 153);\">108</li><li style=\"color: rgb(153, 153, 153);\">109</li><li style=\"color: rgb(153, 153, 153);\">110</li><li style=\"color: rgb(153, 153, 153);\">111</li><li style=\"color: rgb(153, 153, 153);\">112</li><li style=\"color: rgb(153, 153, 153);\">113</li><li style=\"color: rgb(153, 153, 153);\">114</li><li style=\"color: rgb(153, 153, 153);\">115</li></ul></pre> \r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"JParallel_Sort_199\"></a>J.Parallel Sort</h2> \r\n<p>题意：数列p{p1,p2,p3…,pn}需要类似快速排序一般，进行两两交换，每次可以交换即将到出现轮回为止，问至少需要多少轮回交换，并输出每次交换的次数和操作</p> \r\n<p>题解：可以考虑成图，在p[i]!=i的点中，每次打标记dfs找到最长的一个环，最优的情况是对于每个pi到p[p[i]]之间存在交换边，</p> \r\n<p>且该两点之间只要交换一次就可以缩小一个环，所以可以考虑所有的环都变成大小小于等于2的环</p> \r\n<pre class=\"prettyprint\"><code class=\"prism language-cpp has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">//#pragma GCC optimize(2)</span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h&gt;</span> </span>\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> endl \"\\n\" </span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> ll long long</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> N<span class=\"token operator\">=</span><span class=\"token number\">1e3</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> mod<span class=\"token operator\">=</span><span class=\"token number\">1e9</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> ll inf<span class=\"token operator\">=</span><span class=\"token number\">0x3f3f3f3f</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> pi<span class=\"token operator\">=</span><span class=\"token function\">acos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">//#define int long long</span>\r\nvector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span>ans<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n    ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>cout<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>cin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token punctuation\">;</span>\r\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span><span class=\"token function\">p</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>cin<span class=\"token operator\">&gt;&gt;</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span><span class=\"token function\">vis</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        vector<span class=\"token operator\">&lt;</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;&gt;</span>change<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>i<span class=\"token operator\">||</span>vis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\r\n            vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span>res<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> u<span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>vis<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                vis<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> u<span class=\"token operator\">=</span>p<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            <span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span>res<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>res<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">[</span>res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                change<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>res<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                l<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> x<span class=\"token operator\">:</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\r\n        cout<span class=\"token operator\">&lt;&lt;</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> y<span class=\"token operator\">:</span>x<span class=\"token punctuation\">)</span> cout<span class=\"token operator\">&lt;&lt;</span>y<span class=\"token punctuation\">.</span>first<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token operator\">&lt;&lt;</span>y<span class=\"token punctuation\">.</span>second<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\r\n        cout<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> \r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li></ul></pre>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/hrd535523596/article/details/116407624&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (12, 'PAT甲级-大整数运算-1024 Palindromic Number解题思路', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <h3><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"1024_Palindromic_Number_25_0\"></a>1024 Palindromic Number (25分)</h3> \r\n<p><img src=\"https://img-blog.csdnimg.cn/2021041900103413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk5OTEzNw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p> \r\n<h3><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_3\"></a>思路</h3> \r\n<p>这里有三个非常大的坑，</p> \r\n<ul><li>数组需要开大一点，不然装不下</li><li>PAT还有个巨坑，输入就是满足条件，就判断完不需要计算了，牛客网即不存在这种问题</li><li>大整数相加处理进位普遍存在的一个问题</li></ul> \r\n<p>这三个问题在代码中均有体现。</p> \r\n<h3><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_10\"></a>代码</h3> \r\n<pre class=\"prettyprint\"><code class=\"prism language-cpp has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h&gt;</span></span>\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">//还有一个坑，数组需要开的足够大</span>\r\n<span class=\"token keyword\">int</span> A<span class=\"token punctuation\">[</span><span class=\"token number\">1005</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> B<span class=\"token punctuation\">[</span><span class=\"token number\">1005</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> len<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">bool</span> <span class=\"token function\">huiwen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{<!-- --></span>\r\n    <span class=\"token comment\">//cout&lt;&lt;len&lt;&lt;endl;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>len<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token comment\">//cout&lt;&lt;B[i]&lt;&lt;\' \';</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span> B<span class=\"token punctuation\">[</span>len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{<!-- --></span>\r\n    string s<span class=\"token punctuation\">;</span>\r\n    cin<span class=\"token operator\">&gt;&gt;</span>s<span class=\"token operator\">&gt;&gt;</span>N<span class=\"token punctuation\">;</span>\r\n    \r\n    len <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{<!-- --></span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token string\">\'0\'</span><span class=\"token punctuation\">;</span>\r\n            B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\r\n    \r\n    <span class=\"token keyword\">bool</span> flag <span class=\"token operator\">=</span> <span class=\"token function\">huiwen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//PAT还有个巨坑，一开始的数据就是回文数字，这样就直接输出</span>\r\n    <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&gt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\r\n            cout<span class=\"token operator\">&lt;&lt;</span>B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        cout<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">0</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> kk <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>kk<span class=\"token operator\">&lt;=</span>N<span class=\"token punctuation\">;</span>kk<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{<!-- --></span>\r\n        <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//这里有个坑，得记住上次的然后，再相加，再进位</span>\r\n            B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> A<span class=\"token punctuation\">[</span>len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n            B<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> A<span class=\"token punctuation\">[</span>len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>len<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">bool</span> flag <span class=\"token operator\">=</span> <span class=\"token function\">huiwen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{<!-- --></span>\r\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&gt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\r\n                cout<span class=\"token operator\">&lt;&lt;</span>B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            cout<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token operator\">&lt;&lt;</span>kk<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        \r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> len<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&gt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\r\n        cout<span class=\"token operator\">&lt;&lt;</span>B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    cout<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token operator\">&lt;&lt;</span>N<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li></ul></pre>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/weixin_43999137/article/details/115843007&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (13, 'Maven下载和配置（详细，适合小白）', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-light\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <p></p>\r\n<div class=\"toc\">\r\n <h3><a name=\"t0\"></a><a name=\"t0\"></a>Maven下载和配置</h3>\r\n <ul><li><a href=\"#Maven_1\" target=\"_self\">一、Maven下载</a></li><li><a href=\"#_6\" target=\"_self\">二、环境配置</a></li><li><ul><li><a href=\"#1mvnbin_7\" target=\"_self\">1）复制mvn所在的bin文件之前的路径</a></li><li><a href=\"#2___10\" target=\"_self\">2）此电脑 右键==&gt;属性</a></li><li><a href=\"#3path_13\" target=\"_self\">3）添加path</a></li><li><a href=\"#4_17\" target=\"_self\">4）如下即配置成功</a></li></ul>\r\n  </li><li><a href=\"#_22\" target=\"_self\">三、配置变量的作用（选择性阅读）</a></li></ul>\r\n</div>\r\n<p></p> \r\n<h1><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"Maven_1\"></a>一、Maven下载</h1> \r\n<p><a href=\"https://maven.apache.org/download.cgi\">【官网下载地址】</a><br> <img src=\"https://img-blog.csdnimg.cn/20210328135209988.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<h1><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_6\"></a>二、环境配置</h1> \r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"1mvnbin_7\"></a>1）复制mvn所在的bin文件之前的路径</h2> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210328141800534.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<hr> \r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"2___10\"></a>2）此电脑 右键==&gt;属性</h2> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210328141551410.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<hr> \r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"3path_13\"></a>3）添加path</h2> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210328141857229.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br> <img src=\"https://img-blog.csdnimg.cn/20210328141915441.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br> <img src=\"https://img-blog.csdnimg.cn/20210328141930470.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<h2><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"4_17\"></a>4）如下即配置成功</h2> \r\n<p><img src=\"https://img-blog.csdnimg.cn/20210328143022133.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<hr> \r\n<h1><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"_22\"></a>三、配置变量的作用（选择性阅读）</h1> \r\n<blockquote> \r\n <p>环境变量（environment variables）一般是指在操作系统中用来指定操作系统运行环境的一些参数，如：临时文件夹位置和系统文件夹位置等。<br> 环境变量是在操作系统中一个具有特定名字的对象，它包含了一个或者多个应用程序所将使用到的信息。例如Windows和DOS操作系统中的path环境变量，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到path中指定的路径去找。用户通过设置环境变量，来更好的运行进程。<br> 来源百度百科</p> \r\n</blockquote> \r\n<p><strong>【简单来说】</strong><br> 为了无需转换盘符即可找到并运行文件，在此即是为了直接运行bin目录下的mvn文件<br> <img src=\"https://img-blog.csdnimg.cn/2021032814273589.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODU1NzQ5Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p> \r\n<hr> \r\n<p><strong>【推荐阅读】</strong><br> <a href=\"https://blog.csdn.net/weixin_48557496/article/details/115281114\">Maven本地仓库地址更改和阿里云远程仓库下载</a><br> <strong>【回见】</strong></p>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/weixin_48557496/article/details/115279991&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (14, 'C++学生管理系统', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atelier-sulphurpool-light\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <h1><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"_0\"></a>(草稿)</h1> \r\n<h2><a name=\"t1\"></a><a name=\"t1\"></a><a id=\"_test01txt__2\"></a>学生信息默认存储在同文件夹下的 test01.txt 文件中</h2> \r\n<pre class=\"prettyprint\"><code class=\"prism language-cpp has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string&gt;</span></span>\r\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fstream&gt;</span></span>\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">constexpr</span> <span class=\"token keyword\">auto</span> FILENAME <span class=\"token operator\">=</span> <span class=\"token string\">\"test01.txt\"</span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n<span class=\"token comment\">//学生类</span>\r\n<span class=\"token keyword\">struct</span> Student\r\n<span class=\"token punctuation\">{<!-- --></span>\r\n	string id<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//学号</span>\r\n	string name<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//姓名</span>\r\n	<span class=\"token keyword\">float</span> chi<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//语文成绩</span>\r\n	<span class=\"token keyword\">float</span> math<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//数学成绩</span>\r\n	<span class=\"token keyword\">float</span> eng<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//英语成绩</span>\r\n\r\n	<span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>string id<span class=\"token punctuation\">,</span> string name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> chi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> math<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> eng<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>chi <span class=\"token operator\">=</span> chi<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>math <span class=\"token operator\">=</span> math<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>eng <span class=\"token operator\">=</span> eng<span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">//管理系统类management system</span>\r\n<span class=\"token keyword\">struct</span> MS\r\n<span class=\"token punctuation\">{<!-- --></span>\r\n	<span class=\"token keyword\">int</span> m_StuNum<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//记录文件中的学生个数</span>\r\n\r\n	Student <span class=\"token operator\">*</span><span class=\"token operator\">*</span> m_StuArr<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//学生数组的指针</span>\r\n\r\n	<span class=\"token keyword\">bool</span> m_FileIsEmpty<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//标志文件是否为空</span>\r\n\r\n	<span class=\"token function\">MS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		ifstream ifs<span class=\"token punctuation\">;</span>\r\n		ifs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">,</span> ios<span class=\"token operator\">::</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//文件不存在情况</span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ifs<span class=\"token punctuation\">.</span><span class=\"token function\">is_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"文件不存在\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">//测试输出</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//初始化人数</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_FileIsEmpty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//初始化文件为空标志</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//初始化数组</span>\r\n			ifs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//关闭文件</span>\r\n			<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n		<span class=\"token comment\">//文件存在，并且没有记录</span>\r\n		<span class=\"token keyword\">char</span> ch<span class=\"token punctuation\">;</span>\r\n		ifs <span class=\"token operator\">&gt;&gt;</span> ch<span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ifs<span class=\"token punctuation\">.</span><span class=\"token function\">eof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"文件为空!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_FileIsEmpty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\r\n			ifs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n		<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">get_StuNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token comment\">//cout &lt;&lt; \"\\n已存有信息的学生个数为：\" &lt;&lt; num &lt;&lt; \"\\n\\n\";  //测试代码</span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//更新成员属性 </span>\r\n\r\n		<span class=\"token comment\">//根据学生数创建数组</span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> Student <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token comment\">//初始化学生</span>\r\n		<span class=\"token function\">init_Stu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//测试代码</span>\r\n		<span class=\"token comment\">/*for (int i = 0; i &lt; m_StuNum; i++)\r\n		{\r\n			cout &lt;&lt; \"学号：\" &lt;&lt; this-&gt;m_StuArr[i]-&gt;id\r\n				&lt;&lt; \"  学生姓名：\" &lt;&lt; this-&gt;m_StuArr[i]-&gt;name\r\n				&lt;&lt; \"  语文成绩：\" &lt;&lt; this-&gt;m_StuArr[i]-&gt;chi\r\n				&lt;&lt; \"  数学成绩：\" &lt;&lt; this-&gt;m_StuArr[i]-&gt;math\r\n				&lt;&lt; \"  英语成绩：\" &lt;&lt; this-&gt;m_StuArr[i]-&gt;eng &lt;&lt; endl;\r\n		}*/</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token operator\">~</span><span class=\"token function\">MS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//展示菜单功能</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"已存有信息的学生个数为：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  学生姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>name\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  语文成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>chi\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  数学成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>math\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  英语成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>eng <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n		cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*****学生管理系统*****\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择以下管理功能：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 学生成绩信息输入\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 学生成绩信息查询\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 学生成绩信息更改\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4. 学生成绩信息删除\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0. 退出\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*********************\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择&lt;0~4&gt;: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//将数据保存到文件</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		ofstream ofs<span class=\"token punctuation\">;</span>\r\n		ofs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">,</span> ios<span class=\"token operator\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n		<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			ofs <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span>\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span>\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>chi <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span>\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>math <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span>\r\n				<span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>eng <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n		ofs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//统计人数</span>\r\n	<span class=\"token keyword\">int</span> <span class=\"token function\">get_StuNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		ifstream ifs<span class=\"token punctuation\">;</span>\r\n		ifs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">,</span> ios<span class=\"token operator\">::</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		string id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">int</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ifs <span class=\"token operator\">&gt;&gt;</span> id <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> name <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> chi <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> math <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> eng<span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			<span class=\"token comment\">//记录学生人数</span>\r\n			num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n		ifs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//初始化学生</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">init_Stu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		ifstream ifs<span class=\"token punctuation\">;</span>\r\n		ifs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">,</span> ios<span class=\"token operator\">::</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		string id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">float</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ifs <span class=\"token operator\">&gt;&gt;</span> id <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> name <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> chi <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> math <span class=\"token operator\">&amp;&amp;</span> ifs <span class=\"token operator\">&gt;&gt;</span> eng<span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			Student <span class=\"token operator\">*</span> stu <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\r\n			stu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			\r\n			<span class=\"token comment\">//存放在数组中</span>\r\n			<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">;</span>\r\n			index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//添加学生信息</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n\r\n		<span class=\"token comment\">//开辟新空间</span>\r\n		Student <span class=\"token operator\">*</span><span class=\"token operator\">*</span> newSpace <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> Student <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span>m_StuNum <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//将原空间下内容存放到新空间下</span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				newSpace<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n\r\n		Student <span class=\"token operator\">*</span>stu <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生信息: \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"学号 姓名 语文成绩 数学成绩 英语成绩: \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		string id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">float</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">;</span>\r\n		cin <span class=\"token operator\">&gt;&gt;</span> id <span class=\"token operator\">&gt;&gt;</span> name <span class=\"token operator\">&gt;&gt;</span> chi <span class=\"token operator\">&gt;&gt;</span> math <span class=\"token operator\">&gt;&gt;</span> eng<span class=\"token punctuation\">;</span>\r\n		stu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		newSpace<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//释放原有空间</span>\r\n		<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//更改新空间的指向</span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr <span class=\"token operator\">=</span> newSpace<span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//更新新的个数</span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum <span class=\"token operator\">=</span> m_StuNum <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//提示信息</span>\r\n		cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"成功添加 1 名学生的信息！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n		\r\n		<span class=\"token comment\">//保存到文件中</span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token comment\">//更新学生信息不为空标志</span>\r\n		<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_FileIsEmpty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//查询学生信息</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_FileIsEmpty<span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"文件不存在或记录为空！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n		<span class=\"token keyword\">else</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入查找的方式：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"1、按学生学号查找\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"2、按学生姓名查找\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n\r\n			<span class=\"token keyword\">int</span> select <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n			cin <span class=\"token operator\">&gt;&gt;</span> select<span class=\"token punctuation\">;</span>\r\n\r\n\r\n			<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>select <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//按学号查找</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				string id<span class=\"token punctuation\">;</span>\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入查找的学生学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n				cin <span class=\"token operator\">&gt;&gt;</span> id<span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n				<span class=\"token punctuation\">{<!-- --></span>\r\n					<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span>\r\n					<span class=\"token punctuation\">{<!-- --></span>\r\n						ret <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\r\n\r\n						<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n					<span class=\"token punctuation\">}</span>\r\n				<span class=\"token punctuation\">}</span>\r\n				<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n				<span class=\"token punctuation\">{<!-- --></span>\r\n					cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查找成功！该学生信息如下：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n					cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id\r\n						<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>name\r\n						<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  语文成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>chi\r\n						<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  数学成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>math\r\n						<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  英语成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>eng <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n				<span class=\"token punctuation\">}</span>\r\n				<span class=\"token keyword\">else</span>\r\n				<span class=\"token punctuation\">{<!-- --></span>\r\n					cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查找失败，查无此人\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n				<span class=\"token punctuation\">}</span>\r\n			<span class=\"token punctuation\">}</span>\r\n			<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>select <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//按姓名查找</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				string name<span class=\"token punctuation\">;</span>\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入查找的姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n				cin <span class=\"token operator\">&gt;&gt;</span> name<span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token keyword\">bool</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//查找到的标志</span>\r\n				<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_StuNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n				<span class=\"token punctuation\">{<!-- --></span>\r\n					<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>name <span class=\"token operator\">==</span> name<span class=\"token punctuation\">)</span>\r\n					<span class=\"token punctuation\">{<!-- --></span>\r\n						cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查找成功,职工编号为：\"</span>\r\n							<span class=\"token operator\">&lt;&lt;</span> m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id\r\n							<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 号的信息如下：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n\r\n						flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n\r\n						cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id\r\n							<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  姓名：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>name\r\n							<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  语文成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>chi\r\n							<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  数学成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>math\r\n							<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  英语成绩：\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>eng <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n					<span class=\"token punctuation\">}</span>\r\n				<span class=\"token punctuation\">}</span>\r\n				<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\r\n				<span class=\"token punctuation\">{<!-- --></span>\r\n					<span class=\"token comment\">//查无此人</span>\r\n					cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查找失败，查无此人\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n				<span class=\"token punctuation\">}</span>\r\n			<span class=\"token punctuation\">}</span>\r\n			<span class=\"token keyword\">else</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"输入选项有误\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//按照学号判断学生是否存在,若存在返回职工在数组中位置，不存在返回-1</span>\r\n	<span class=\"token keyword\">int</span> <span class=\"token function\">IsExist</span><span class=\"token punctuation\">(</span>string id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n		<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>id <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				index <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n		<span class=\"token keyword\">return</span> index<span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//更改学生信息</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_FileIsEmpty<span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"文件不存在或记录为空！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n		<span class=\"token keyword\">else</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入修改学生的学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			string id<span class=\"token punctuation\">;</span>\r\n			cin <span class=\"token operator\">&gt;&gt;</span> id<span class=\"token punctuation\">;</span>\r\n\r\n			<span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">IsExist</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				<span class=\"token comment\">//查找到学号的学生</span>\r\n\r\n				<span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"查到学号为：\"</span> <span class=\"token operator\">&lt;&lt;</span> id <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的学生\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n				Student <span class=\"token operator\">*</span>stu <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\r\n				<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生信息: \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n				<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"学号 姓名 语文成绩 数学成绩 英语成绩: \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n				string id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">;</span>\r\n				<span class=\"token keyword\">float</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">;</span>\r\n				cin <span class=\"token operator\">&gt;&gt;</span> id <span class=\"token operator\">&gt;&gt;</span> name <span class=\"token operator\">&gt;&gt;</span> chi <span class=\"token operator\">&gt;&gt;</span> math <span class=\"token operator\">&gt;&gt;</span> eng<span class=\"token punctuation\">;</span>\r\n				stu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Student</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> chi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> eng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token comment\">//更改数据 到数组中</span>\r\n				<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>ret<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">;</span>\r\n\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"修改成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token comment\">//保存到文件中</span>\r\n				<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n			<span class=\"token keyword\">else</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"修改失败，查无此人\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n		<span class=\"token comment\">//按任意键 清屏</span>\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n	<span class=\"token comment\">//删除学生信息</span>\r\n	<span class=\"token keyword\">void</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_FileIsEmpty<span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"文件不存在或记录为空！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n		<span class=\"token keyword\">else</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n			<span class=\"token comment\">//按学生编号删除</span>\r\n			cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入想要删除的学生的学号：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			string id<span class=\"token punctuation\">;</span>\r\n			cin <span class=\"token operator\">&gt;&gt;</span> id<span class=\"token punctuation\">;</span>\r\n\r\n			<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">IsExist</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n			<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//说明index上位置数据需要删除</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n				<span class=\"token punctuation\">{<!-- --></span>\r\n					<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuArr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n				<span class=\"token punctuation\">}</span>\r\n				<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>m_StuNum<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\r\n\r\n				<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//删除后数据同步到文件中</span>\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"删除成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n			<span class=\"token keyword\">else</span>\r\n			<span class=\"token punctuation\">{<!-- --></span>\r\n				cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"删除失败，未找到该学生\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n			<span class=\"token punctuation\">}</span>\r\n		<span class=\"token punctuation\">}</span>\r\n\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n	<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n	MS ms<span class=\"token punctuation\">;</span>\r\n\r\n	<span class=\"token keyword\">int</span> choice<span class=\"token punctuation\">;</span>\r\n	<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\r\n		ms<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		\r\n		cin <span class=\"token operator\">&gt;&gt;</span> choice<span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span>\r\n		<span class=\"token punctuation\">{<!-- --></span>\r\n		<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//1. 学生成绩信息输入</span>\r\n			ms<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//2. 学生成绩信息查询</span>\r\n			ms<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//3. 学生成绩信息更改</span>\r\n			ms<span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//4. 学生成绩信息删除</span>\r\n			ms<span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token comment\">//0. 退出</span>\r\n			<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n欢迎下次使用\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\r\n			<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n您输入的选项有误, 请重新输入正确的选项\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n			<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token punctuation\">}</span>\r\n	<span class=\"token punctuation\">}</span>\r\n\r\n\r\n	<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li><li style=\"color: rgb(153, 153, 153);\">12</li><li style=\"color: rgb(153, 153, 153);\">13</li><li style=\"color: rgb(153, 153, 153);\">14</li><li style=\"color: rgb(153, 153, 153);\">15</li><li style=\"color: rgb(153, 153, 153);\">16</li><li style=\"color: rgb(153, 153, 153);\">17</li><li style=\"color: rgb(153, 153, 153);\">18</li><li style=\"color: rgb(153, 153, 153);\">19</li><li style=\"color: rgb(153, 153, 153);\">20</li><li style=\"color: rgb(153, 153, 153);\">21</li><li style=\"color: rgb(153, 153, 153);\">22</li><li style=\"color: rgb(153, 153, 153);\">23</li><li style=\"color: rgb(153, 153, 153);\">24</li><li style=\"color: rgb(153, 153, 153);\">25</li><li style=\"color: rgb(153, 153, 153);\">26</li><li style=\"color: rgb(153, 153, 153);\">27</li><li style=\"color: rgb(153, 153, 153);\">28</li><li style=\"color: rgb(153, 153, 153);\">29</li><li style=\"color: rgb(153, 153, 153);\">30</li><li style=\"color: rgb(153, 153, 153);\">31</li><li style=\"color: rgb(153, 153, 153);\">32</li><li style=\"color: rgb(153, 153, 153);\">33</li><li style=\"color: rgb(153, 153, 153);\">34</li><li style=\"color: rgb(153, 153, 153);\">35</li><li style=\"color: rgb(153, 153, 153);\">36</li><li style=\"color: rgb(153, 153, 153);\">37</li><li style=\"color: rgb(153, 153, 153);\">38</li><li style=\"color: rgb(153, 153, 153);\">39</li><li style=\"color: rgb(153, 153, 153);\">40</li><li style=\"color: rgb(153, 153, 153);\">41</li><li style=\"color: rgb(153, 153, 153);\">42</li><li style=\"color: rgb(153, 153, 153);\">43</li><li style=\"color: rgb(153, 153, 153);\">44</li><li style=\"color: rgb(153, 153, 153);\">45</li><li style=\"color: rgb(153, 153, 153);\">46</li><li style=\"color: rgb(153, 153, 153);\">47</li><li style=\"color: rgb(153, 153, 153);\">48</li><li style=\"color: rgb(153, 153, 153);\">49</li><li style=\"color: rgb(153, 153, 153);\">50</li><li style=\"color: rgb(153, 153, 153);\">51</li><li style=\"color: rgb(153, 153, 153);\">52</li><li style=\"color: rgb(153, 153, 153);\">53</li><li style=\"color: rgb(153, 153, 153);\">54</li><li style=\"color: rgb(153, 153, 153);\">55</li><li style=\"color: rgb(153, 153, 153);\">56</li><li style=\"color: rgb(153, 153, 153);\">57</li><li style=\"color: rgb(153, 153, 153);\">58</li><li style=\"color: rgb(153, 153, 153);\">59</li><li style=\"color: rgb(153, 153, 153);\">60</li><li style=\"color: rgb(153, 153, 153);\">61</li><li style=\"color: rgb(153, 153, 153);\">62</li><li style=\"color: rgb(153, 153, 153);\">63</li><li style=\"color: rgb(153, 153, 153);\">64</li><li style=\"color: rgb(153, 153, 153);\">65</li><li style=\"color: rgb(153, 153, 153);\">66</li><li style=\"color: rgb(153, 153, 153);\">67</li><li style=\"color: rgb(153, 153, 153);\">68</li><li style=\"color: rgb(153, 153, 153);\">69</li><li style=\"color: rgb(153, 153, 153);\">70</li><li style=\"color: rgb(153, 153, 153);\">71</li><li style=\"color: rgb(153, 153, 153);\">72</li><li style=\"color: rgb(153, 153, 153);\">73</li><li style=\"color: rgb(153, 153, 153);\">74</li><li style=\"color: rgb(153, 153, 153);\">75</li><li style=\"color: rgb(153, 153, 153);\">76</li><li style=\"color: rgb(153, 153, 153);\">77</li><li style=\"color: rgb(153, 153, 153);\">78</li><li style=\"color: rgb(153, 153, 153);\">79</li><li style=\"color: rgb(153, 153, 153);\">80</li><li style=\"color: rgb(153, 153, 153);\">81</li><li style=\"color: rgb(153, 153, 153);\">82</li><li style=\"color: rgb(153, 153, 153);\">83</li><li style=\"color: rgb(153, 153, 153);\">84</li><li style=\"color: rgb(153, 153, 153);\">85</li><li style=\"color: rgb(153, 153, 153);\">86</li><li style=\"color: rgb(153, 153, 153);\">87</li><li style=\"color: rgb(153, 153, 153);\">88</li><li style=\"color: rgb(153, 153, 153);\">89</li><li style=\"color: rgb(153, 153, 153);\">90</li><li style=\"color: rgb(153, 153, 153);\">91</li><li style=\"color: rgb(153, 153, 153);\">92</li><li style=\"color: rgb(153, 153, 153);\">93</li><li style=\"color: rgb(153, 153, 153);\">94</li><li style=\"color: rgb(153, 153, 153);\">95</li><li style=\"color: rgb(153, 153, 153);\">96</li><li style=\"color: rgb(153, 153, 153);\">97</li><li style=\"color: rgb(153, 153, 153);\">98</li><li style=\"color: rgb(153, 153, 153);\">99</li><li style=\"color: rgb(153, 153, 153);\">100</li><li style=\"color: rgb(153, 153, 153);\">101</li><li style=\"color: rgb(153, 153, 153);\">102</li><li style=\"color: rgb(153, 153, 153);\">103</li><li style=\"color: rgb(153, 153, 153);\">104</li><li style=\"color: rgb(153, 153, 153);\">105</li><li style=\"color: rgb(153, 153, 153);\">106</li><li style=\"color: rgb(153, 153, 153);\">107</li><li style=\"color: rgb(153, 153, 153);\">108</li><li style=\"color: rgb(153, 153, 153);\">109</li><li style=\"color: rgb(153, 153, 153);\">110</li><li style=\"color: rgb(153, 153, 153);\">111</li><li style=\"color: rgb(153, 153, 153);\">112</li><li style=\"color: rgb(153, 153, 153);\">113</li><li style=\"color: rgb(153, 153, 153);\">114</li><li style=\"color: rgb(153, 153, 153);\">115</li><li style=\"color: rgb(153, 153, 153);\">116</li><li style=\"color: rgb(153, 153, 153);\">117</li><li style=\"color: rgb(153, 153, 153);\">118</li><li style=\"color: rgb(153, 153, 153);\">119</li><li style=\"color: rgb(153, 153, 153);\">120</li><li style=\"color: rgb(153, 153, 153);\">121</li><li style=\"color: rgb(153, 153, 153);\">122</li><li style=\"color: rgb(153, 153, 153);\">123</li><li style=\"color: rgb(153, 153, 153);\">124</li><li style=\"color: rgb(153, 153, 153);\">125</li><li style=\"color: rgb(153, 153, 153);\">126</li><li style=\"color: rgb(153, 153, 153);\">127</li><li style=\"color: rgb(153, 153, 153);\">128</li><li style=\"color: rgb(153, 153, 153);\">129</li><li style=\"color: rgb(153, 153, 153);\">130</li><li style=\"color: rgb(153, 153, 153);\">131</li><li style=\"color: rgb(153, 153, 153);\">132</li><li style=\"color: rgb(153, 153, 153);\">133</li><li style=\"color: rgb(153, 153, 153);\">134</li><li style=\"color: rgb(153, 153, 153);\">135</li><li style=\"color: rgb(153, 153, 153);\">136</li><li style=\"color: rgb(153, 153, 153);\">137</li><li style=\"color: rgb(153, 153, 153);\">138</li><li style=\"color: rgb(153, 153, 153);\">139</li><li style=\"color: rgb(153, 153, 153);\">140</li><li style=\"color: rgb(153, 153, 153);\">141</li><li style=\"color: rgb(153, 153, 153);\">142</li><li style=\"color: rgb(153, 153, 153);\">143</li><li style=\"color: rgb(153, 153, 153);\">144</li><li style=\"color: rgb(153, 153, 153);\">145</li><li style=\"color: rgb(153, 153, 153);\">146</li><li style=\"color: rgb(153, 153, 153);\">147</li><li style=\"color: rgb(153, 153, 153);\">148</li><li style=\"color: rgb(153, 153, 153);\">149</li><li style=\"color: rgb(153, 153, 153);\">150</li><li style=\"color: rgb(153, 153, 153);\">151</li><li style=\"color: rgb(153, 153, 153);\">152</li><li style=\"color: rgb(153, 153, 153);\">153</li><li style=\"color: rgb(153, 153, 153);\">154</li><li style=\"color: rgb(153, 153, 153);\">155</li><li style=\"color: rgb(153, 153, 153);\">156</li><li style=\"color: rgb(153, 153, 153);\">157</li><li style=\"color: rgb(153, 153, 153);\">158</li><li style=\"color: rgb(153, 153, 153);\">159</li><li style=\"color: rgb(153, 153, 153);\">160</li><li style=\"color: rgb(153, 153, 153);\">161</li><li style=\"color: rgb(153, 153, 153);\">162</li><li style=\"color: rgb(153, 153, 153);\">163</li><li style=\"color: rgb(153, 153, 153);\">164</li><li style=\"color: rgb(153, 153, 153);\">165</li><li style=\"color: rgb(153, 153, 153);\">166</li><li style=\"color: rgb(153, 153, 153);\">167</li><li style=\"color: rgb(153, 153, 153);\">168</li><li style=\"color: rgb(153, 153, 153);\">169</li><li style=\"color: rgb(153, 153, 153);\">170</li><li style=\"color: rgb(153, 153, 153);\">171</li><li style=\"color: rgb(153, 153, 153);\">172</li><li style=\"color: rgb(153, 153, 153);\">173</li><li style=\"color: rgb(153, 153, 153);\">174</li><li style=\"color: rgb(153, 153, 153);\">175</li><li style=\"color: rgb(153, 153, 153);\">176</li><li style=\"color: rgb(153, 153, 153);\">177</li><li style=\"color: rgb(153, 153, 153);\">178</li><li style=\"color: rgb(153, 153, 153);\">179</li><li style=\"color: rgb(153, 153, 153);\">180</li><li style=\"color: rgb(153, 153, 153);\">181</li><li style=\"color: rgb(153, 153, 153);\">182</li><li style=\"color: rgb(153, 153, 153);\">183</li><li style=\"color: rgb(153, 153, 153);\">184</li><li style=\"color: rgb(153, 153, 153);\">185</li><li style=\"color: rgb(153, 153, 153);\">186</li><li style=\"color: rgb(153, 153, 153);\">187</li><li style=\"color: rgb(153, 153, 153);\">188</li><li style=\"color: rgb(153, 153, 153);\">189</li><li style=\"color: rgb(153, 153, 153);\">190</li><li style=\"color: rgb(153, 153, 153);\">191</li><li style=\"color: rgb(153, 153, 153);\">192</li><li style=\"color: rgb(153, 153, 153);\">193</li><li style=\"color: rgb(153, 153, 153);\">194</li><li style=\"color: rgb(153, 153, 153);\">195</li><li style=\"color: rgb(153, 153, 153);\">196</li><li style=\"color: rgb(153, 153, 153);\">197</li><li style=\"color: rgb(153, 153, 153);\">198</li><li style=\"color: rgb(153, 153, 153);\">199</li><li style=\"color: rgb(153, 153, 153);\">200</li><li style=\"color: rgb(153, 153, 153);\">201</li><li style=\"color: rgb(153, 153, 153);\">202</li><li style=\"color: rgb(153, 153, 153);\">203</li><li style=\"color: rgb(153, 153, 153);\">204</li><li style=\"color: rgb(153, 153, 153);\">205</li><li style=\"color: rgb(153, 153, 153);\">206</li><li style=\"color: rgb(153, 153, 153);\">207</li><li style=\"color: rgb(153, 153, 153);\">208</li><li style=\"color: rgb(153, 153, 153);\">209</li><li style=\"color: rgb(153, 153, 153);\">210</li><li style=\"color: rgb(153, 153, 153);\">211</li><li style=\"color: rgb(153, 153, 153);\">212</li><li style=\"color: rgb(153, 153, 153);\">213</li><li style=\"color: rgb(153, 153, 153);\">214</li><li style=\"color: rgb(153, 153, 153);\">215</li><li style=\"color: rgb(153, 153, 153);\">216</li><li style=\"color: rgb(153, 153, 153);\">217</li><li style=\"color: rgb(153, 153, 153);\">218</li><li style=\"color: rgb(153, 153, 153);\">219</li><li style=\"color: rgb(153, 153, 153);\">220</li><li style=\"color: rgb(153, 153, 153);\">221</li><li style=\"color: rgb(153, 153, 153);\">222</li><li style=\"color: rgb(153, 153, 153);\">223</li><li style=\"color: rgb(153, 153, 153);\">224</li><li style=\"color: rgb(153, 153, 153);\">225</li><li style=\"color: rgb(153, 153, 153);\">226</li><li style=\"color: rgb(153, 153, 153);\">227</li><li style=\"color: rgb(153, 153, 153);\">228</li><li style=\"color: rgb(153, 153, 153);\">229</li><li style=\"color: rgb(153, 153, 153);\">230</li><li style=\"color: rgb(153, 153, 153);\">231</li><li style=\"color: rgb(153, 153, 153);\">232</li><li style=\"color: rgb(153, 153, 153);\">233</li><li style=\"color: rgb(153, 153, 153);\">234</li><li style=\"color: rgb(153, 153, 153);\">235</li><li style=\"color: rgb(153, 153, 153);\">236</li><li style=\"color: rgb(153, 153, 153);\">237</li><li style=\"color: rgb(153, 153, 153);\">238</li><li style=\"color: rgb(153, 153, 153);\">239</li><li style=\"color: rgb(153, 153, 153);\">240</li><li style=\"color: rgb(153, 153, 153);\">241</li><li style=\"color: rgb(153, 153, 153);\">242</li><li style=\"color: rgb(153, 153, 153);\">243</li><li style=\"color: rgb(153, 153, 153);\">244</li><li style=\"color: rgb(153, 153, 153);\">245</li><li style=\"color: rgb(153, 153, 153);\">246</li><li style=\"color: rgb(153, 153, 153);\">247</li><li style=\"color: rgb(153, 153, 153);\">248</li><li style=\"color: rgb(153, 153, 153);\">249</li><li style=\"color: rgb(153, 153, 153);\">250</li><li style=\"color: rgb(153, 153, 153);\">251</li><li style=\"color: rgb(153, 153, 153);\">252</li><li style=\"color: rgb(153, 153, 153);\">253</li><li style=\"color: rgb(153, 153, 153);\">254</li><li style=\"color: rgb(153, 153, 153);\">255</li><li style=\"color: rgb(153, 153, 153);\">256</li><li style=\"color: rgb(153, 153, 153);\">257</li><li style=\"color: rgb(153, 153, 153);\">258</li><li style=\"color: rgb(153, 153, 153);\">259</li><li style=\"color: rgb(153, 153, 153);\">260</li><li style=\"color: rgb(153, 153, 153);\">261</li><li style=\"color: rgb(153, 153, 153);\">262</li><li style=\"color: rgb(153, 153, 153);\">263</li><li style=\"color: rgb(153, 153, 153);\">264</li><li style=\"color: rgb(153, 153, 153);\">265</li><li style=\"color: rgb(153, 153, 153);\">266</li><li style=\"color: rgb(153, 153, 153);\">267</li><li style=\"color: rgb(153, 153, 153);\">268</li><li style=\"color: rgb(153, 153, 153);\">269</li><li style=\"color: rgb(153, 153, 153);\">270</li><li style=\"color: rgb(153, 153, 153);\">271</li><li style=\"color: rgb(153, 153, 153);\">272</li><li style=\"color: rgb(153, 153, 153);\">273</li><li style=\"color: rgb(153, 153, 153);\">274</li><li style=\"color: rgb(153, 153, 153);\">275</li><li style=\"color: rgb(153, 153, 153);\">276</li><li style=\"color: rgb(153, 153, 153);\">277</li><li style=\"color: rgb(153, 153, 153);\">278</li><li style=\"color: rgb(153, 153, 153);\">279</li><li style=\"color: rgb(153, 153, 153);\">280</li><li style=\"color: rgb(153, 153, 153);\">281</li><li style=\"color: rgb(153, 153, 153);\">282</li><li style=\"color: rgb(153, 153, 153);\">283</li><li style=\"color: rgb(153, 153, 153);\">284</li><li style=\"color: rgb(153, 153, 153);\">285</li><li style=\"color: rgb(153, 153, 153);\">286</li><li style=\"color: rgb(153, 153, 153);\">287</li><li style=\"color: rgb(153, 153, 153);\">288</li><li style=\"color: rgb(153, 153, 153);\">289</li><li style=\"color: rgb(153, 153, 153);\">290</li><li style=\"color: rgb(153, 153, 153);\">291</li><li style=\"color: rgb(153, 153, 153);\">292</li><li style=\"color: rgb(153, 153, 153);\">293</li><li style=\"color: rgb(153, 153, 153);\">294</li><li style=\"color: rgb(153, 153, 153);\">295</li><li style=\"color: rgb(153, 153, 153);\">296</li><li style=\"color: rgb(153, 153, 153);\">297</li><li style=\"color: rgb(153, 153, 153);\">298</li><li style=\"color: rgb(153, 153, 153);\">299</li><li style=\"color: rgb(153, 153, 153);\">300</li><li style=\"color: rgb(153, 153, 153);\">301</li><li style=\"color: rgb(153, 153, 153);\">302</li><li style=\"color: rgb(153, 153, 153);\">303</li><li style=\"color: rgb(153, 153, 153);\">304</li><li style=\"color: rgb(153, 153, 153);\">305</li><li style=\"color: rgb(153, 153, 153);\">306</li><li style=\"color: rgb(153, 153, 153);\">307</li><li style=\"color: rgb(153, 153, 153);\">308</li><li style=\"color: rgb(153, 153, 153);\">309</li><li style=\"color: rgb(153, 153, 153);\">310</li><li style=\"color: rgb(153, 153, 153);\">311</li><li style=\"color: rgb(153, 153, 153);\">312</li><li style=\"color: rgb(153, 153, 153);\">313</li><li style=\"color: rgb(153, 153, 153);\">314</li><li style=\"color: rgb(153, 153, 153);\">315</li><li style=\"color: rgb(153, 153, 153);\">316</li><li style=\"color: rgb(153, 153, 153);\">317</li><li style=\"color: rgb(153, 153, 153);\">318</li><li style=\"color: rgb(153, 153, 153);\">319</li><li style=\"color: rgb(153, 153, 153);\">320</li><li style=\"color: rgb(153, 153, 153);\">321</li><li style=\"color: rgb(153, 153, 153);\">322</li><li style=\"color: rgb(153, 153, 153);\">323</li><li style=\"color: rgb(153, 153, 153);\">324</li><li style=\"color: rgb(153, 153, 153);\">325</li><li style=\"color: rgb(153, 153, 153);\">326</li><li style=\"color: rgb(153, 153, 153);\">327</li><li style=\"color: rgb(153, 153, 153);\">328</li><li style=\"color: rgb(153, 153, 153);\">329</li><li style=\"color: rgb(153, 153, 153);\">330</li><li style=\"color: rgb(153, 153, 153);\">331</li><li style=\"color: rgb(153, 153, 153);\">332</li><li style=\"color: rgb(153, 153, 153);\">333</li><li style=\"color: rgb(153, 153, 153);\">334</li><li style=\"color: rgb(153, 153, 153);\">335</li><li style=\"color: rgb(153, 153, 153);\">336</li><li style=\"color: rgb(153, 153, 153);\">337</li><li style=\"color: rgb(153, 153, 153);\">338</li><li style=\"color: rgb(153, 153, 153);\">339</li><li style=\"color: rgb(153, 153, 153);\">340</li><li style=\"color: rgb(153, 153, 153);\">341</li><li style=\"color: rgb(153, 153, 153);\">342</li><li style=\"color: rgb(153, 153, 153);\">343</li><li style=\"color: rgb(153, 153, 153);\">344</li><li style=\"color: rgb(153, 153, 153);\">345</li><li style=\"color: rgb(153, 153, 153);\">346</li><li style=\"color: rgb(153, 153, 153);\">347</li><li style=\"color: rgb(153, 153, 153);\">348</li><li style=\"color: rgb(153, 153, 153);\">349</li><li style=\"color: rgb(153, 153, 153);\">350</li><li style=\"color: rgb(153, 153, 153);\">351</li><li style=\"color: rgb(153, 153, 153);\">352</li><li style=\"color: rgb(153, 153, 153);\">353</li><li style=\"color: rgb(153, 153, 153);\">354</li><li style=\"color: rgb(153, 153, 153);\">355</li><li style=\"color: rgb(153, 153, 153);\">356</li><li style=\"color: rgb(153, 153, 153);\">357</li><li style=\"color: rgb(153, 153, 153);\">358</li><li style=\"color: rgb(153, 153, 153);\">359</li><li style=\"color: rgb(153, 153, 153);\">360</li><li style=\"color: rgb(153, 153, 153);\">361</li><li style=\"color: rgb(153, 153, 153);\">362</li><li style=\"color: rgb(153, 153, 153);\">363</li><li style=\"color: rgb(153, 153, 153);\">364</li><li style=\"color: rgb(153, 153, 153);\">365</li><li style=\"color: rgb(153, 153, 153);\">366</li><li style=\"color: rgb(153, 153, 153);\">367</li><li style=\"color: rgb(153, 153, 153);\">368</li><li style=\"color: rgb(153, 153, 153);\">369</li><li style=\"color: rgb(153, 153, 153);\">370</li><li style=\"color: rgb(153, 153, 153);\">371</li><li style=\"color: rgb(153, 153, 153);\">372</li><li style=\"color: rgb(153, 153, 153);\">373</li><li style=\"color: rgb(153, 153, 153);\">374</li><li style=\"color: rgb(153, 153, 153);\">375</li><li style=\"color: rgb(153, 153, 153);\">376</li><li style=\"color: rgb(153, 153, 153);\">377</li><li style=\"color: rgb(153, 153, 153);\">378</li><li style=\"color: rgb(153, 153, 153);\">379</li><li style=\"color: rgb(153, 153, 153);\">380</li><li style=\"color: rgb(153, 153, 153);\">381</li><li style=\"color: rgb(153, 153, 153);\">382</li><li style=\"color: rgb(153, 153, 153);\">383</li><li style=\"color: rgb(153, 153, 153);\">384</li><li style=\"color: rgb(153, 153, 153);\">385</li><li style=\"color: rgb(153, 153, 153);\">386</li><li style=\"color: rgb(153, 153, 153);\">387</li><li style=\"color: rgb(153, 153, 153);\">388</li><li style=\"color: rgb(153, 153, 153);\">389</li><li style=\"color: rgb(153, 153, 153);\">390</li><li style=\"color: rgb(153, 153, 153);\">391</li><li style=\"color: rgb(153, 153, 153);\">392</li><li style=\"color: rgb(153, 153, 153);\">393</li><li style=\"color: rgb(153, 153, 153);\">394</li><li style=\"color: rgb(153, 153, 153);\">395</li><li style=\"color: rgb(153, 153, 153);\">396</li><li style=\"color: rgb(153, 153, 153);\">397</li><li style=\"color: rgb(153, 153, 153);\">398</li><li style=\"color: rgb(153, 153, 153);\">399</li><li style=\"color: rgb(153, 153, 153);\">400</li><li style=\"color: rgb(153, 153, 153);\">401</li><li style=\"color: rgb(153, 153, 153);\">402</li><li style=\"color: rgb(153, 153, 153);\">403</li><li style=\"color: rgb(153, 153, 153);\">404</li><li style=\"color: rgb(153, 153, 153);\">405</li><li style=\"color: rgb(153, 153, 153);\">406</li><li style=\"color: rgb(153, 153, 153);\">407</li><li style=\"color: rgb(153, 153, 153);\">408</li><li style=\"color: rgb(153, 153, 153);\">409</li><li style=\"color: rgb(153, 153, 153);\">410</li><li style=\"color: rgb(153, 153, 153);\">411</li><li style=\"color: rgb(153, 153, 153);\">412</li><li style=\"color: rgb(153, 153, 153);\">413</li><li style=\"color: rgb(153, 153, 153);\">414</li><li style=\"color: rgb(153, 153, 153);\">415</li><li style=\"color: rgb(153, 153, 153);\">416</li><li style=\"color: rgb(153, 153, 153);\">417</li><li style=\"color: rgb(153, 153, 153);\">418</li><li style=\"color: rgb(153, 153, 153);\">419</li><li style=\"color: rgb(153, 153, 153);\">420</li><li style=\"color: rgb(153, 153, 153);\">421</li><li style=\"color: rgb(153, 153, 153);\">422</li><li style=\"color: rgb(153, 153, 153);\">423</li><li style=\"color: rgb(153, 153, 153);\">424</li><li style=\"color: rgb(153, 153, 153);\">425</li><li style=\"color: rgb(153, 153, 153);\">426</li><li style=\"color: rgb(153, 153, 153);\">427</li><li style=\"color: rgb(153, 153, 153);\">428</li><li style=\"color: rgb(153, 153, 153);\">429</li><li style=\"color: rgb(153, 153, 153);\">430</li><li style=\"color: rgb(153, 153, 153);\">431</li><li style=\"color: rgb(153, 153, 153);\">432</li><li style=\"color: rgb(153, 153, 153);\">433</li><li style=\"color: rgb(153, 153, 153);\">434</li><li style=\"color: rgb(153, 153, 153);\">435</li><li style=\"color: rgb(153, 153, 153);\">436</li><li style=\"color: rgb(153, 153, 153);\">437</li><li style=\"color: rgb(153, 153, 153);\">438</li></ul></pre>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/qq_45538657/article/details/116153383&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (15, '一文教你学会使用 th:block', NULL, '<article class=\"baidu_pl\">\r\n        <div id=\"article_content\" class=\"article_content clearfix\">\r\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\r\n                <div id=\"content_views\" class=\"markdown_views prism-atelier-sulphurpool-light\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\r\n                    </svg>\r\n                    <h1><a name=\"t0\"></a><a name=\"t0\"></a><a id=\"thblock__0\"></a>th:block 笔记</h1> \r\n<p></p>\r\n<div class=\"toc\">\r\n <h3><a name=\"t1\"></a><a name=\"t1\"></a>文章目录</h3>\r\n <ul><li><a href=\"#thblock__0\" target=\"_self\">th:block 笔记</a></li><li><ul><li><a href=\"#_3\" target=\"_self\">说明</a></li><li><a href=\"#1__7\" target=\"_self\">1. 官方文档</a></li><li><a href=\"#2__13\" target=\"_self\">2. 使用说明</a></li><li><a href=\"#3__87\" target=\"_self\">3. 特别之处</a></li><li><ul><li><a href=\"#1_thblock__91\" target=\"_self\">(1) `th:block` 特性</a></li><li><a href=\"#2__95\" target=\"_self\">(2) 同时控制多个相连标签是否显示</a></li><li><a href=\"#3__115\" target=\"_self\">(3) 循环同级标签</a></li></ul>\r\n  </li></ul>\r\n </li></ul>\r\n</div>\r\n<p></p> \r\n<h2><a name=\"t2\"></a><a name=\"t2\"></a><a id=\"_3\"></a>说明</h2> \r\n<blockquote> \r\n <p>时间赶的话可以直接看 2 中的粗体部分，和 3</p> \r\n</blockquote> \r\n<h2><a name=\"t3\"></a><a name=\"t3\"></a><a id=\"1__7\"></a>1. 官方文档</h2> \r\n<p><a href=\"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#synthetic-thblock-tag\">https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#synthetic-thblock-tag</a></p> \r\n<h2><a name=\"t4\"></a><a name=\"t4\"></a><a id=\"2__13\"></a>2. 使用说明</h2> \r\n<blockquote> \r\n <p><strong>11.4. Synthetic <code>th:block</code> tag</strong></p> \r\n <p>​ 合成的？人造的？<code>th:block</code> 标签？</p> \r\n <p>​ <strong>我觉得这里的意思应该是 <code>th:block</code> 是 Thymeleaf 提供的（块状）标签。</strong></p> \r\n</blockquote> \r\n<blockquote> \r\n <p>​ Thymeleaf’s only element processor (not an attribute) included in the Standard Dialects is <code>th:block</code>.</p> \r\n <p>​ Thymeleaf 的标准方言中包含的唯一的 Thymeleaf 元素处理器 （不是属性）。</p> \r\n</blockquote> \r\n<blockquote> \r\n <p>​ <code>th:block</code> is a mere attribute container that allows template developers to specify whichever attributes they want. Thymeleaf will execute these attributes and then simply make the block, but not its contents, disappear.</p> \r\n <p>​ <code>th:block</code> 是一个属性容器，允许模板开发人员指定他们想要的属性。Thymeleaf 将执行这些属性，然后简单地使块消失，而不留下痕迹。</p> \r\n <p>​ <strong>Thymeleaf 模板引擎在处理 <code>th:block</code> 的时候会删掉它本身，标签本身不显示，只显示内容，当没有从后端获取到内容时，就不显示</strong></p> \r\n</blockquote> \r\n<blockquote> \r\n <p>​ So it could be useful, for example, when creating iterated tables that require more than one <code>&lt;tr&gt;</code> for each element:</p> \r\n <p>​ 因此，在有些情况它可能有用。比如，当创建迭代表时，每个元素需要多个<code>&lt;tr&gt;</code>。</p> \r\n <p>​ <strong>使用 <code>th:block</code> 和 <code>table</code> 配合，可以批量获取到数据并组装成对应的前端页面显示，好处是如果没有获取到数据，则不会显示任何内容</strong></p> \r\n</blockquote> \r\n<blockquote> \r\n <pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>user : ${users}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>${user.login}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>${user.name}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\">colspan</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>${user.address}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">th:</span>block</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre> \r\n</blockquote> \r\n<blockquote> \r\n <p>​ And especially useful when used in combination with prototype-only comment blocks:</p> \r\n <p>​ 当和原型的注释块一起使用的时候尤其有用。</p> \r\n <p>​ <strong>将 <code>th:block</code> 在 html 注释而不在 Thymeleaf 注释，可以在 html 预览时看到显示的样式。</strong></p> \r\n <pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token comment\">&lt;!--/*/ &lt;th:block th:each=\"user : ${users}\"&gt; /*/--&gt;</span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>${user.login}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>${user.name}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\">colspan</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>${user.address}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n <span class=\"token comment\">&lt;!--/*/ &lt;/th:block&gt; /*/--&gt;</span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li><li style=\"color: rgb(153, 153, 153);\">8</li><li style=\"color: rgb(153, 153, 153);\">9</li><li style=\"color: rgb(153, 153, 153);\">10</li><li style=\"color: rgb(153, 153, 153);\">11</li></ul></pre> \r\n <p>​ Note how this solution allows templates to be valid HTML (no need to add forbidden <code>&lt;div&gt;</code> blocks inside <code>&lt;table&gt;</code>), and still works OK when open statically in browsers as prototypes!</p> \r\n <p>​ 注意上面这个解决方案如何使模板成为有效的 HTML(不要在<code>table</code>标签内使用<code>div</code>标签)，当在浏览器中作为原型静态打开时仍然可以使用。</p> \r\n <p>​ <strong>参考上一段粗体字意思</strong></p> \r\n</blockquote> \r\n<h2><a name=\"t5\"></a><a name=\"t5\"></a><a id=\"3__87\"></a>3. 特别之处</h2> \r\n<p>参考：<a href=\"http://www.yyjjssnn.cn/articles/849.html\">程序员刘杨的th:block笔记</a></p> \r\n<h3><a name=\"t6\"></a><a name=\"t6\"></a><a id=\"1_thblock__91\"></a>(1) <code>th:block</code> 特性</h3> \r\n<blockquote> \r\n <p><strong>Thymeleaf 块标签 <code>th:block</code> 是个空标签，标签本身不显示。</strong></p> \r\n</blockquote> \r\n<h3><a name=\"t7\"></a><a name=\"t7\"></a><a id=\"2__95\"></a>(2) 同时控制多个相连标签是否显示</h3> \r\n<pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>div1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>div2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n...\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li></ul></pre> \r\n<pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n	<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>div1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n	<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>div2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n    ...\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">th:</span>block</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li></ul></pre> \r\n<h3><a name=\"t8\"></a><a name=\"t8\"></a><a id=\"3__115\"></a>(3) 循环同级标签</h3> \r\n<blockquote> \r\n <p>​ <strong>比如在表格中需要使用 <code>th:each</code> 循环两个 <code>tr</code>，在不知道 <code>th:block</code> 标签时，可能会用 <code>th:each</code> 配合 <code>th:if</code> 使用，但是使用 <code>th:block</code> 就简单了</strong></p> \r\n</blockquote> \r\n<pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n	<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item : ...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n		<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n		<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li></ul></pre> \r\n<pre class=\"prettyprint\"><code class=\"prism language-html has-numbering\" onclick=\"mdcp.copyCode(event)\" style=\"position: unset;\"><span class=\"token comment\">&lt;!-- table标签不要内嵌 div标签 --&gt;</span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n	<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\r\n		<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n		<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token punctuation\">&gt;</span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\r\n	<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">th:</span>block</span><span class=\"token punctuation\">&gt;</span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\r\n<div class=\"hljs-button {2}\" data-title=\"复制\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}\"></div></code><ul class=\"pre-numbering\" style=\"\"><li style=\"color: rgb(153, 153, 153);\">1</li><li style=\"color: rgb(153, 153, 153);\">2</li><li style=\"color: rgb(153, 153, 153);\">3</li><li style=\"color: rgb(153, 153, 153);\">4</li><li style=\"color: rgb(153, 153, 153);\">5</li><li style=\"color: rgb(153, 153, 153);\">6</li><li style=\"color: rgb(153, 153, 153);\">7</li></ul></pre>\r\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/qq_45538657/article/details/116043986&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\r\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\r\n        </div>\r\n    </article>', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (16, 'vsdvsd', NULL, 'dssdfsd', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (17, '【宫水三叶】优化枚举的基本思路与进阶内容', NULL, '<div class=\"e1ak08xt1 css-154e5au-StyledRenderedMarkdown\"><h2>朴素二维前缀和</h2>\n<p>从题面来看显然是一道「二维前缀和」的题目，如果你还不了解「二维前缀和」，可以看看 <a href=\"https://leetcode-cn.com/problems/range-sum-query-2d-immutable/solution/xia-ci-ru-he-zai-30-miao-nei-zuo-chu-lai-ptlo/\" target=\"_blank\">（题解）304. 二维区域和检索 - 矩阵不可变</a>。本题预处理前缀和的复杂度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>∗</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m * n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>搜索所有子矩阵需要枚举「矩形左上角」和「矩形右下角」，复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>m</mi><mn>2</mn></msup><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m^2 * n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>因此，如果把本题当做二维前缀和模板题来做的话，整体复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>m</mi><mn>2</mn></msup><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m^2 * n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>数据范围是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>，对应的计算量是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span>，处于超时边缘，但当我们枚举「矩阵右下角」<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i,j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 的时候，我们只需要搜索位于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i,j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 的左上方的点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>p</mi><mo separator=\"true\">,</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(p,q)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose\">)</span></span></span></span> 作为「矩阵左上角」，所以其实我们是取不满 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">m^2 * n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 的，但仍然具有超时风险（2021/05/29 Java 测试可通过）。</p>\n<p>代码：</p>\n<div class=\"css-hhbtqi\"><ul class=\"css-6wg17u\"><li><input type=\"radio\" style=\"display: none;\" class=\"css-hj0l0s\" id=\"label-group-1-0\" name=\"label-group-1\" checked=\"\"><label for=\"group-1-0\" onclick=\"this.previousElementSibling.click()\">Java</label></li></ul><input type=\"radio\" style=\"display: none;\" class=\"css-5pejp0\" id=\"group-1-0\" name=\"group-1\" checked=\"\"><pre><button class=\"md-btn-copy\" title=\"复制代码\"><i></i></button><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">numSubmatrixSumTarget</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[][] mat, <span class=\"hljs-keyword\">int</span> t)</span> </span>{\n        <span class=\"hljs-keyword\">int</span> n = mat.length, m = mat[<span class=\"hljs-number\">0</span>].length;\n        <span class=\"hljs-keyword\">int</span>[][] sum = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[n + <span class=\"hljs-number\">1</span>][m + <span class=\"hljs-number\">1</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= m; j++) {\n                sum[i][j] = sum[i - <span class=\"hljs-number\">1</span>][j] + sum[i][j - <span class=\"hljs-number\">1</span>] - sum[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>] + mat[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>];\n            }\n        }\n        <span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= m; j++) {\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> p = <span class=\"hljs-number\">1</span>; p &lt;= i; p++) {\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> q = <span class=\"hljs-number\">1</span>; q &lt;= j; q++) {\n                        <span class=\"hljs-keyword\">if</span> (sum[i][j] - sum[p - <span class=\"hljs-number\">1</span>][j] - sum[i][q - <span class=\"hljs-number\">1</span>] + sum[p - <span class=\"hljs-number\">1</span>][q - <span class=\"hljs-number\">1</span>] == t) ans++;\n                    }\n                }\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n}\n</code></pre>\n</div><ul>\n<li>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>m</mi><mn>2</mn></msup><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m^2 * n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>∗</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m * n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<hr>\n<h2>优化枚举 + 哈希表</h2>\n<p>上述分析是从「点」上来确定一个子矩阵，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span> 同阶的情况下，复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>4</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^4)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 的。</p>\n<p>事实上，我们能从「边」的角度来确定一个子矩阵，通过枚举三条边，然后加速找第四条边的过程，这样可以将复杂度降到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p><strong>这个分析思路在 <a href=\"https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/solution/gong-shui-san-xie-you-hua-mei-ju-de-ji-b-dh8s/\" target=\"_blank\">（题解）363. 矩形区域不超过 K 的最大数值和</a> 详细讲过，没有印象的同学可以翻翻。这道题一定程度上是那道题的简化版，在本题我们只需要找到矩阵和为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">target</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span></span></span></span> 的值，因此只需要使用「哈希表」来记录出现过的值即可，而在 <a href=\"https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/\" target=\"_blank\">（原题）363. 矩形区域不超过 K 的最大数值和</a> 中，我们需要找到和不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的最大子矩阵，因此还涉及「有序集合 + 二分」。</strong></p>\n<p>具体的，我们仍然需要先预处理出一个二维前缀和。<strong>然后通过枚举确定「子矩阵的上下边界」，在将「子矩阵右边界」不断右移的过程中，把「子矩阵右边界」到「原矩阵左边界」行程的矩阵和存入哈希表（因为要统计数量，存储格式为 {\"面积”:\"出现次数\"} ），然后通过容斥原理来找到目标的「子矩阵左边界」。</strong></p>\n<p>假设当前我们「子矩阵的上下边界」已经固定，当枚举到某个「子矩阵右边界」时，我们先通过二维前缀和计算出「子矩阵右边界」和「原矩阵左边界」形成的矩阵和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">cur</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">u</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span></span></span></span>，由于我们希望找到矩阵和为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">target</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span></span></span></span> 的子矩阵，即希望找到一个「子矩阵左边界」使得矩阵和满足要求，这等价于从「哈希表」中找到一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>，使得 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mo>−</mo><mi>x</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">cur - x = target</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">u</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">t</span></span></span></span>，这是一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 操作。</p>\n<p align=\"center\"><img src=\"https://pic.leetcode-cn.com/1622250565-sdYzhq-image.png\" alt=\"image.png\" onerror=\"this.src=\'data:image/svg+xml,%3Csvg height=\\\'150\\\' viewBox=\\\'0 0 150 150\\\' width=\\\'150\\\' xmlns=\\\'http://www.w3.org/2000/svg\\\'%3E%3Cpath d=\\\'m2465 2286.42347-18.95363-18.92555-50.0112 43.79935-24.62708-24.5906-33.41155 24.5906-22.99654-17.22567v-73.0716c0-2.20914 1.79086-4 4-4h142c2.20914 0 4 1.79086 4 4zm-122-25.59081c5.52285 0 10-4.47052 10-9.98518 0-5.51467-4.47715-9.98519-10-9.98519s-10 4.47052-10 9.98519c0 5.51466 4.47715 9.98518 10 9.98518zm122 40.89296v61.27438c0 2.20914-1.79086 4-4 4h-142c-2.20914 0-4-1.79086-4-4v-53.62625l22.99654 17.22567 33.41155-24.5906 24.62708 24.5906 50.0112-43.79935z\\\' fill=\\\'%23eee\\\' fill-rule=\\\'evenodd\\\' transform=\\\'translate(-2315 -2217)\\\'/%3E%3C/svg%3E\'; \"></p>\n<p><strong>代码（感谢 <a href=\"/u/ulysessweb/\" target=\"_blank\">@ulysessweb</a> 同学提供的其他语言代码）：</strong></p>\n<div class=\"css-hhbtqi\"><ul class=\"css-6wg17u\"><li><input type=\"radio\" style=\"display: none;\" class=\"css-hj0l0s\" id=\"label-group-2-0\" name=\"label-group-2\" checked=\"\"><label for=\"group-2-0\" onclick=\"this.previousElementSibling.click()\">Java</label></li><li><input type=\"radio\" style=\"display: none;\" class=\"css-hj0l0s\" id=\"label-group-2-6\" name=\"label-group-2\"><label for=\"group-2-6\" onclick=\"this.previousElementSibling.click()\">C++</label></li></ul><input type=\"radio\" style=\"display: none;\" class=\"css-5pejp0\" id=\"group-2-0\" name=\"group-2\" checked=\"\"><pre><button class=\"md-btn-copy\" title=\"复制代码\"><i></i></button><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">numSubmatrixSumTarget</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[][] mat, <span class=\"hljs-keyword\">int</span> t)</span> </span>{\n        <span class=\"hljs-keyword\">int</span> n = mat.length, m = mat[<span class=\"hljs-number\">0</span>].length;\n        <span class=\"hljs-keyword\">int</span>[][] sum = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[n + <span class=\"hljs-number\">1</span>][m + <span class=\"hljs-number\">1</span>];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= m; j++) {\n                sum[i][j] = sum[i - <span class=\"hljs-number\">1</span>][j] + sum[i][j - <span class=\"hljs-number\">1</span>] - sum[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>] + mat[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>];\n            }\n        }\n        <span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> top = <span class=\"hljs-number\">1</span>; top &lt;= n; top++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> bot = top; bot &lt;= n; bot++) {\n                <span class=\"hljs-keyword\">int</span> cur = <span class=\"hljs-number\">0</span>;\n                Map&lt;Integer, Integer&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> r = <span class=\"hljs-number\">1</span>; r &lt;= m; r++) {\n                    cur = sum[bot][r] - sum[top - <span class=\"hljs-number\">1</span>][r];\n                    <span class=\"hljs-keyword\">if</span> (cur == t) ans++;\n                    <span class=\"hljs-keyword\">if</span> (map.containsKey(cur - t)) ans += map.get(cur - t);\n                    map.put(cur, map.getOrDefault(cur, <span class=\"hljs-number\">0</span>) + <span class=\"hljs-number\">1</span>);\n                }\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n}\n</code></pre>\n<input type=\"radio\" style=\"display: none;\" class=\"css-5pejp0\" id=\"group-2-6\" name=\"group-2\"><pre><button class=\"md-btn-copy\" title=\"复制代码\"><i></i></button><code><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> {</span>\n<span class=\"hljs-keyword\">public</span>:\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">numSubmatrixSumTarget</span><span class=\"hljs-params\">(<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-keyword\">int</span>&gt;&gt;&amp; matrix, <span class=\"hljs-keyword\">int</span> target)</span> </span>{\n        <span class=\"hljs-keyword\">int</span> n = matrix.size(), m = matrix[<span class=\"hljs-number\">0</span>].size();\n        <span class=\"hljs-function\"><span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-keyword\">int</span>&gt;&gt; <span class=\"hljs-title\">sum</span><span class=\"hljs-params\">(n + <span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">vector</span>&lt;<span class=\"hljs-keyword\">int</span>&gt;(m + <span class=\"hljs-number\">1</span>))</span></span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= m; j++) {\n                sum[i][j] = sum[i - <span class=\"hljs-number\">1</span>][j] + sum[i][j - <span class=\"hljs-number\">1</span>] - sum[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>] + matrix[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>];\n            }\n        }\n        <span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> top = <span class=\"hljs-number\">1</span>; top &lt;= n; top++) {\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> bot = top; bot &lt;= n; bot++) {\n                <span class=\"hljs-keyword\">int</span> cur = <span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-built_in\">unordered_map</span>&lt;<span class=\"hljs-keyword\">int</span>, <span class=\"hljs-keyword\">int</span>&gt; <span class=\"hljs-built_in\">map</span>;\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> r = <span class=\"hljs-number\">1</span>; r &lt;= m; r++) {\n                    cur = sum[bot][r] - sum[top - <span class=\"hljs-number\">1</span>][r];\n                    <span class=\"hljs-keyword\">if</span> (cur == target) ans++;\n                    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">map</span>.count(cur - target)) ans += <span class=\"hljs-built_in\">map</span>[cur - target];\n                    <span class=\"hljs-built_in\">map</span>[cur]++;\n                }\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> ans;\n    }\n};\n</code></pre>\n</div><ul>\n<li>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m * n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>∗</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m * n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<hr>\n<h2>进阶</h2>\n<ol>\n<li>\n<p>【时间复杂度】在上述解法中，我们采用的是<strong>固定上下边界，移动右边界，通过哈希表找左边界</strong>的做法，复杂度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m * n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>；自然也能改为<strong>固定左右边界，移动下边界，通过哈希表找上边界</strong>做法，复杂度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>m</mi><mn>2</mn></msup><mo>∗</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m^2 * n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span>。那么我们要如何调整代码，才能最大化「哈希表」带来的优化效果呢？此时的复杂度又是多少？</p>\n</li>\n<li>\n<p>【空间复杂度】我们空间复杂度的瓶颈在「二维前缀和」上，但注意到无论我们采取「固定上下边界」还是「固定左右边界」的做法，扫描原矩阵的方向都是固定的，那么是否可以不预处理「二维前缀和」呢？从而将空间复杂度降低到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\max(n, m))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span> 呢？</p>\n</li>\n</ol>\n<p>上述两问，你都可以在 <a href=\"https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/solution/gong-shui-san-xie-you-hua-mei-ju-de-ji-b-dh8s/\" target=\"_blank\">（题解）363. 矩形区域不超过 K 的最大数值和</a> 中找到答案。</p>\n</div>', 1, 1, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (18, '测试', NULL, '测试文章', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (19, '哈哈哈', NULL, '嘿嘿嘿', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (20, '测试', NULL, '测试文章非常', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (21, '哈哈哈哈', NULL, '放到SV', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (22, '个点数VN搜的', NULL, 'f的SV深度是是大V深度', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (23, '个点数VN搜的', NULL, 'f的SV深度', 1, 0, '2021-06-01 20:05:47');
INSERT INTO `article` VALUES (24, '谷歌将正式推出 Fuchsia OS，已有适配设备', NULL, '<article class=\"baidu_pl\">\n        <div id=\"article_content\" class=\"article_content clearfix\">\n        <link rel=\"stylesheet\" href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css\">\n                <div id=\"content_views\" class=\"markdown_views prism-atom-one-dark\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\n                        <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n                    </svg>\n                    <blockquote> \n <p>原文链接: https://9to5google.com/2021/05/25/google-releases-fuchsia-os-nest-hub/</p> \n</blockquote> \n<p>Google 新一代的操作系统 Fuchsia ，已经可以开始投入到 Google 相关设备（第一代 Nest Hub ）上运行。</p> \n<blockquote> \n <p><a href=\"https://mp.weixin.qq.com/s/_onQZ_JBmvV3DvRkoqsc4w\">Fuchsia 是使用 Flutter 作为 UI 开发语言的系统。</a></p> \n</blockquote> \n<p>Fuchsia OS 将向 2018 年发布的初代 Nest Hub 智能显示器推出更新，而此更新都不会更改 Nest Hub 的任何功能 ，而<strong>内核系统将从 Linux 的 Cast OS 更新为 Fuchsia OS</strong>。</p> \n<p><strong>之所以可以这样做，是因为 Google 它是基于 Flutter 构建的界面，Flutter 旨在将应用程序一致地带到包括 Fuchsia 在内的多个平台上。</strong>。</p> \n<p>自 2016 年以来 Fuchsia 的发展一直备受关注，从实验性的用户界面开始，一直到针对 Fuchsia 的内部测试设备上运行，包括 Google 智能家居和 Chromebook 系列的全部产品，从那时起 Fuchsia OS 逐渐发展，<strong>最近甚至开始了稳定的发布计划</strong>。</p> \n<p>本月初运行 “Fuchsia 1.0” 版本的第一代 Google Nest Hub 获得了蓝牙 SIG 的新批准，这表明 Google 可以将 Fuchsia 从其内部测试过程扩展到更加面向公众的领域。</p> \n<p>Nest Hub 基于 Fuchsia OS 的更新会在未来几个月内陆续推出，<strong>考虑到界面和体验将保持不变，Nest Hub 所有者可能甚至不会注意到他们已经切换到了 Fuchsia OS</strong>，也就是说，由于切换操作系统不是一个简单的更新，因此 Google 似乎在几个月的过程中一直谨慎采取行动。</p> \n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/91924a322dd2722b5a7ec8eab6538fc4.png\" alt=\"\"></p> \n<p>今天的 Fuchsia 的发布标志着谷歌在 Fuchsia OS领域迈出了一大步，Fuchsia 未来可能成为了普通人都可以使用的操作系统，通过在各种真实设备上进行现场测试，<strong>Google 可以保证其从零开始的 “非Linux” 操作系统已准备好在智能家居中替代 Cast OS</strong>。</p> \n<blockquote> \n <p>目前尚不清楚谷歌是否打算将其他基于 Cast OS 的设备移植到 Fuchsia。</p> \n</blockquote> \n<p><strong>智能家居只是 Google 为 Fuchsia 探索的众多途径之一，其操作系统的设计更可能为 PC 和 手机甚至 Android 谋求下一步的变化</strong>。正如 Google 的 Hiroshi Lockheimer 在 2019 年所说的那样，智能家居可能是 Fuchsia 在 Google 上的起点。</p>\n                </div><div data-report-view=\"{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://carguo.blog.csdn.net/article/details/117263395&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}\"><div></div></div>\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css\" rel=\"stylesheet\">\n                <link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-f1c5feb645.css\" rel=\"stylesheet\">\n        </div>\n    </article>', 1, 0, '2021-06-01 20:05:47');

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uid` int(11) NOT NULL,
  `aid` int(11) NOT NULL,
  `ctime` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `text` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `ui`(`uid`) USING BTREE,
  INDEX `ai`(`aid`) USING BTREE,
  CONSTRAINT `ai` FOREIGN KEY (`aid`) REFERENCES `article` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `ui` FOREIGN KEY (`uid`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (1, 1, 1, '2021-06-02 09:12:47', '牛逼啊');
INSERT INTO `comment` VALUES (2, 1, 1, '2021-06-02 09:47:08', '111');
INSERT INTO `comment` VALUES (3, 1, 1, '2021-06-02 12:51:14', '11111111111111');

-- ----------------------------
-- Table structure for friend
-- ----------------------------
DROP TABLE IF EXISTS `friend`;
CREATE TABLE `friend`  (
  `aid` int(11) NOT NULL,
  `bid` int(11) NOT NULL,
  `ctime` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  INDEX `aid`(`aid`) USING BTREE,
  INDEX `bid`(`bid`) USING BTREE,
  CONSTRAINT `friend_ibfk_1` FOREIGN KEY (`aid`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `friend_ibfk_2` FOREIGN KEY (`bid`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for request
-- ----------------------------
DROP TABLE IF EXISTS `request`;
CREATE TABLE `request`  (
  `aid` int(11) NOT NULL,
  `bid` int(11) NOT NULL,
  `status` int(11) NOT NULL DEFAULT 0,
  `ctime` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  INDEX `aid`(`aid`) USING BTREE,
  INDEX `bid`(`bid`) USING BTREE,
  CONSTRAINT `request_ibfk_1` FOREIGN KEY (`aid`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `request_ibfk_2` FOREIGN KEY (`bid`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `alias` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `password` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `ctime` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username`(`username`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (1, 'prince', NULL, '123456', '2021-06-01 20:00:25');
INSERT INTO `user` VALUES (2, '1906300101', '大哥', '123456', '2021-06-02 00:20:36');
INSERT INTO `user` VALUES (3, '1906300102', '大海', '123456', '2021-06-02 13:09:13');
INSERT INTO `user` VALUES (4, '1906300103', '伦酱', '123456', '2021-06-02 13:09:24');
INSERT INTO `user` VALUES (5, '1906300104', '坤坤酱', '123456', '2021-06-02 13:09:43');
INSERT INTO `user` VALUES (6, '1906300106', '滔滔爷', '123456', '2021-06-02 13:09:58');

SET FOREIGN_KEY_CHECKS = 1;
